(()=>{"use strict";var t={591:(t,e,r)=>{r.d(e,{Z:()=>s});var n=r(537),i=r.n(n),o=r(645),a=r.n(o)()(i());a.push([t.id,"*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}\n\n#player-board > .tile:hover {\n  cursor: grab;\n}\n","",{version:3,sources:["webpack://./src/assets/style/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,oCAAoC;EACpC,eAAe;AACjB;;AAEA;EACE,YAAY;AACd",sourcesContent:["*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}\n\n#player-board > .tile:hover {\n  cursor: grab;\n}\n"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var u=0;u<t.length;u++){var c=[].concat(t[u]);n&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var o={},a=[],s=0;s<t.length;s++){var l=t[s],u=n.base?l[0]+n.base:l[0],c=o[u]||0,f="".concat(u," ").concat(c);o[u]=c+1;var y=r(f),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==y)e[y].references++,e[y].updater(h);else{var p=i(h,n);n.byIndex=s,e.splice(s,0,{identifier:f,updater:p,references:1})}a.push(f)}return a}function i(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,i){var o=n(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<o.length;a++){var s=r(o[a]);e[s].references--}for(var l=n(t,i),u=0;u<o.length;u++){var c=r(o[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var i=void 0!==r.layer;i&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,i&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={id:n,exports:{}};return t[n](o,o.exports,r),o.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{var t=document.querySelectorAll(".board"),e=document.getElementById("player-board");t.forEach((function(t){var e=t;e.style.display="grid",e.style.border="1px solid black",e.style.gridTemplateColumns="repeat(10, max(3.5vw))",e.style.gridTemplateRows="repeat(10, max(3.5vw))";for(var r=0;r<10;r+=1)for(var n=0;n<10;n+=1){var i=document.createElement("div");i.classList.add("tile"),i.id="".concat(r,"-").concat(n),i.style.border="1px solid black",e.appendChild(i)}}));var n=document.getElementById("computer-board"),i=document.querySelectorAll("#computer-board > .tile"),o=document.querySelectorAll("#player-board > .tile"),a=document.getElementById("turn-indicator"),s=document.getElementById("play-again"),l=document.getElementById("start-game"),u=r(379),c=r.n(u),f=r(795),y=r.n(f),h=r(569),p=r.n(h),v=r(565),m=r.n(v),d=r(216),b=r.n(d),g=r(589),S=r.n(g),k=r(591),A={};function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function w(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o,a,s=[],l=!0,u=!1;try{if(o=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=o.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(u)throw i}}return s}}(t,e)||P(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(t,e){if(t){if("string"==typeof t)return T(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?T(t,e):void 0}}function T(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function B(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==E(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===E(i)?i:String(i)),n)}var i}A.styleTagTransform=S(),A.setAttributes=m(),A.insert=p().bind(null,"head"),A.domAPI=y(),A.insertStyleElement=b(),c()(k.Z,A),k.Z&&k.Z.locals&&k.Z.locals;var j=function(){function t(e,r,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.enemyBoard=r,this.playerBoard=n,this.moves=i,this.targetShip=null,this.targetTile=null,this.targetStack=[],this.lastHitTile=null,this.toBlockIfShipSunk=[]}var e,r,n;return e=t,n=[{key:"shuffleArray",value:function(t){for(var e=t.length-1;e>0;e-=1){var r=Math.floor(Math.random()*(e+1)),n=[t[r],t[e]];t[e]=n[0],t[r]=n[1]}return t}}],(r=[{key:"reset",value:function(){this.moves=[],this.targetShip=null,this.targetTile=null,this.targetStack=[],this.lastHitTile=null}},{key:"resetAttackChain",value:function(){this.targetShip=null,this.targetStack=[],this.lastHitTile=null,this.toBlockIfShipSunk=[]}},{key:"setBoard",value:function(t){var e=this;t.forEach((function(t){var r=w(t,2),n=r[0],i=r[1];e.playerBoard.placeShip(n,i)}))}},{key:"attackEnemy",value:function(t){return this.targetTile=t,this.moves.push(t),this.enemyBoard.receiveAttack(t)}},{key:"chooseAttack",value:function(){var t=[parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)];return this.moves.find((function(e){return e[0]===t[0]&&e[1]===t[1]}))?this.chooseAttack():this.attackEnemy(t)}},{key:"continueAttack",value:function(e){var r,n,i=w(e,2),o=i[0],a=i[1];(r=this.targetStack).unshift.apply(r,function(t){if(Array.isArray(t))return T(t)}(n=t.shuffleArray([[o+1,a],[o-1,a],[o,a+1],[o,a-1]]))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||P(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());for(var s=this.targetStack.shift();!(s[0]>=0&&s[0]<=9&&s[1]>=0&&s[1]<=9)||this.moves.find((function(t){return t[0]===s[0]&&t[1]===s[1]}));)s=this.targetStack.shift();return this.attackEnemy(s)}}])&&B(e.prototype,r),n&&B(e,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function C(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o,a,s=[],l=!0,u=!1;try{if(o=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=o.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(u)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return O(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?O(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function O(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function x(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==I(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===I(i)?i:String(i)),n)}var i}var L=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[],this.missed=[],this.shipParts=0,this.init()}var e,r;return e=t,r=[{key:"init",value:function(){for(var t=0;t<10;t+=1){this.board[t]=[];for(var e=0;e<10;e+=1)this.board[t].push(null)}}},{key:"reset",value:function(){this.board=[],this.missed=[],this.shipParts=0,this.init()}},{key:"placeShip",value:function(t,e){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=e.length,i=C(t,2),o=i[0],a=i[1];if(r&&(a+n-1>9||this.isInvalidHoriPlacement(o,a,n)))return!1;if(!r&&(o+n-1>9||this.isInvalidVertiPlacement(o,a,n)))return!1;for(var s=0;s<n;s+=1)r?this.board[o][a+s]=e:this.board[o+s][a]=e,this.shipParts+=1;return!0}},{key:"isInvalidHoriPlacement",value:function(t,e,r){for(var n=t-1;n<=t+1;n+=1)for(var i=e-1;i<=e+r;i+=1)if(n>=0&&n<=9&&i>=0&&i<=9&&this.board[n][i])return!0;return!1}},{key:"isInvalidVertiPlacement",value:function(t,e,r){for(var n=t-1;n<=t+r;n+=1)for(var i=e-1;i<=e+1;i+=1)if(n>=0&&n<=9&&i>=0&&i<=9&&this.board[n][i])return!0;return!1}},{key:"receiveAttack",value:function(t){var e=C(t,2),r=e[0],n=e[1],i=this.board[r][n];return i?(i.hit(),this.shipParts-=1,i):(this.missed.push(t),!1)}},{key:"shipsHaveSunk",value:function(){if(0===this.shipParts)return!0}}],r&&x(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function H(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==M(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===M(i)?i:String(i)),n)}var i}var U=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.hits=0}var e,r;return e=t,(r=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length===this.hits}}])&&H(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function N(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o,a,s=[],l=!0,u=!1;try{if(o=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=o.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(u)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Z(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Z(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Z(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function q(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===R(i)?i:String(i)),n)}var i}var z=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.playerBoard=new L,this.enemyBoard=new L,this.player=new j("player",this.enemyBoard,this.playerBoard),this.computer=new j("comp",this.playerBoard,this.enemyBoard),this.eventListeners={},this.currentPlayer=this.player,this.shipLengths=[4,3,3,2,2,2,1,1,1,1]}var e,r;return e=t,(r=[{key:"reset",value:function(){this.playerBoard.reset(),this.enemyBoard.reset(),this.player.reset(),this.computer.reset(),this.currentPlayer=this.player,this.eventListeners={},this.init()}},{key:"init",value:function(){this.playerPlaceShips(),this.placeShips(this.enemyBoard),this.onTurnEnd()}},{key:"playerAttacks",value:function(t,e){var r=this.player.attackEnemy(t);this.registerAttack(r,e)||(this.currentPlayer=this.computer,this.signalTurnEnd())}},{key:"computerAttacks",value:function(){var t=this.computer.targetShip?this.computer.continueAttack(this.computer.lastHitTile):this.computer.chooseAttack(),e=10*this.computer.targetTile[0]+this.computer.targetTile[1];this.registerAttack(t,e)||(this.currentPlayer=this.player,this.signalTurnEnd())}},{key:"registerAttack",value:function(t,e){if(t){var r=t.isSunk();this.emit("hit",e),this.currentPlayer.targetShip=t,this.currentPlayer.lastHitTile=this.currentPlayer.targetTile,this.currentPlayer.targetShip.hits>1||r?this.blockAdjacentTiles(this.currentPlayer.lastHitTile,this.currentPlayer.enemyBoard.board,r):this.emit("firstHit",this.currentPlayer.lastHitTile),r&&(this.emit("blockIfShipSunk",this.currentPlayer.toBlockIfShipSunk),this.currentPlayer.resetAttackChain())}else this.emit("miss",e);return this.isGameOver()}},{key:"blockAdjacentTiles",value:function(t,e,r){var n=this,i=N(t,2),o=i[0],a=i[1],s=[[o+1,a],[o-1,a],[o,a+1],[o,a-1]];r&&s.push([o+1,a+1],[o+1,a-1],[o-1,a+1],[o-1,a-1]),s.forEach((function(t){var r=N(t,2),i=r[0],o=r[1];if(i>=0&&i<=9&&o>=0&&o<=9&&!e[i][o]){n.currentPlayer.moves.push(t);var a=10*i+o;n.emit("block",[a])}})),console.log("Blockign")}},{key:"onTurnEnd",value:function(){var t=this;this.on("turnEnd",(function(e){"comp"===e.name&&setTimeout((function(){return t.computerAttacks()}),400)}))}},{key:"signalTurnEnd",value:function(){this.emit("turnEnd",this.currentPlayer)}},{key:"isGameOver",value:function(){if(this.playerBoard.shipsHaveSunk()||this.enemyBoard.shipsHaveSunk())return this.emit("over",this.currentPlayer.name),!0}},{key:"playerPlaceShips",value:function(){this.placeShips(this.playerBoard)}},{key:"placeShips",value:function(t){var e=this;this.shipLengths.forEach((function(r){var n=Math.random()>.5;e.placeShipsHelper(r,n,t)}))}},{key:"placeShipsHelper",value:function(t,e,r){return!!r.placeShip([parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)],new U(t),e)||this.placeShipsHelper(t,e,r)}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&q(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function $(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o,a,s=[],l=!0,u=!1;try{if(o=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=o.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(u)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return V(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?V(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function V(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function G(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==F(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===F(i)?i:String(i)),n)}var i}var J=function(){function t(r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=r,this.enemyBoard=n,this.playerBoard=e,this.tiles=i,this.turnUI=a,this.eventListeners={},this.setUpTiles()}var r,u;return r=t,(u=[{key:"reset",value:function(t){this.eventListeners={},this.resetBoard(),this.game=t,this.init()}},{key:"init",value:function(){this.tiles=i,this.subscribe(),this.playerPlacingBoard()}},{key:"setUpTiles",value:function(){var t=this,e=0;this.tiles.forEach((function(r){var n=e;r.addEventListener("click",(function(e){var i=[parseInt(r.id.charAt(0),10),parseInt(r.id.charAt(2),10)];t.game.playerAttacks(i,n),e.target.style.pointerEvents="none"})),e+=1}))}},{key:"subscribe",value:function(){var t=this;this.game.on("hit",(function(e){t.renderHit(e),t.toggleTiles()})),this.game.on("miss",(function(e){t.renderMiss(e),t.toggleTiles()})),this.game.on("turnEnd",(function(e){t.updateTurnUI(e),t.togglePlay(e)})),this.game.on("over",(function(e){t.gameOverBoard(e)})),this.game.on("placed",(function(){t.highlightPlayerShips()})),this.game.on("block",(function(e){t.blockTiles(e)})),this.game.on("firstHit",(function(e){t.clueOnFirstHit(e)})),this.game.on("blockIfShipSunk",(function(e){e.forEach((function(e){t.blockTiles(e)}))})),s.addEventListener("click",(function(){s.style.display="none",t.playerPlacingBoard(),t.emit("reset")})),l.addEventListener("click",(function(){l.style.display="none",t.gameStartBoard()}))}},{key:"renderHit",value:function(t){this.tiles[t].style.backgroundColor="red"}},{key:"renderMiss",value:function(t){this.tiles[t].style.backgroundColor="gray"}},{key:"blockTiles",value:function(t){"player"===this.game.currentPlayer.name?(i[t].style.backgroundColor="gray",i[t].style.pointerEvents="none"):(o[t].style.backgroundColor="gray",o[t].style.pointerEvents="none")}},{key:"clueOnFirstHit",value:function(t){var e=this,r=$(t,2),n=r[0],a=r[1],s=[[n+1,a],[n-1,a],[n,a+1],[n,a-1],[n+1,a+1],[n+1,a-1],[n-1,a+1],[n-1,a-1]],l="player"===this.game.currentPlayer.name?i:o;s.forEach((function(t){var r=$(t,2),n=r[0],i=r[1];if(n>=0&&n<=9&&i>=0&&i<=9){var o=10*n+i;l[o].style.backgroundColor="gray"===l[o].style.backgroundColor?"gray":"pink",e.game.currentPlayer.enemyBoard.board[n][i]||e.game.currentPlayer.toBlockIfShipSunk.push(o)}}))}},{key:"toggleTiles",value:function(){this.tiles=this.tiles===i?o:i}},{key:"togglePlay",value:function(t){"player"===t.name?(this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"):(this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto")}},{key:"updateTurnUI",value:function(t){"player"===t.name?this.turnUI.textContent="Player's Turn":this.turnUI.textContent="Computer's Turn"}},{key:"playerPlacingBoard",value:function(){this.turnUI.textContent="Place your ships!",s.style.display="none",l.style.display="block",this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto"}},{key:"gameStartBoard",value:function(){this.turnUI.textContent="Player's Turn",this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"}},{key:"gameOverBoard",value:function(t){this.turnUI.textContent="".concat(t," wins!"),s.style.display="block",this.freezeBoards()}},{key:"freezeBoards",value:function(){this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="none"}},{key:"resetBoard",value:function(){[i,o].forEach((function(t){t.forEach((function(t){t.style.backgroundColor="",t.style.removeProperty("pointer-events")}))})),this.turnUI.textContent="BATTLESHIP"}},{key:"highlightPlayerShips",value:function(){var t=this;o.forEach((function(e){var r=[parseInt(e.id.charAt(0),10),parseInt(e.id.charAt(2),10)];t.game.playerBoard.board[r[0]][r[1]]&&(e.style.backgroundColor="yellow")}))}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&G(r.prototype,u),Object.defineProperty(r,"prototype",{writable:!1}),t}();function Y(t){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Y(t)}function _(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==Y(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==Y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===Y(i)?i:String(i)),n)}var i}(new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=new z,this.domManager=new J(this.game)}var e,r;return e=t,(r=[{key:"init",value:function(){var t=this;this.game.init(),this.domManager.init(),this.playerShipsPlaced(),this.domManager.on("reset",(function(){t.game.reset(),t.domManager.reset(t.game),t.playerShipsPlaced()}))}},{key:"playerShipsPlaced",value:function(){this.game.emit("placed")}}])&&_(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}())).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var t={591:(t,e,r)=>{r.d(e,{Z:()=>u});var n=r(537),o=r.n(n),i=r(645),a=r.n(i)()(o());a.push([t.id,"*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n  font-family: 'Josefin Sans', sans-serif;\n}\nmain {\n  background-color: white;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(112, 162, 184);\n  background-color: rgb(29, 115, 152);\n  cursor: pointer;\n}\n\n#player-board > .tile:hover {\n  cursor: grab;\n}\n\nbutton {\n  padding: 5px 20px;\n  font-size: 1rem;\n}\n\n","",{version:3,sources:["webpack://./src/assets/style/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;EACb,uCAAuC;AACzC;AACA;EACE,uBAAuB;AACzB;;AAEA;EACE,oCAAoC;EACpC,mCAAmC;EACnC,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB",sourcesContent:["*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n  font-family: 'Josefin Sans', sans-serif;\n}\nmain {\n  background-color: white;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(112, 162, 184);\n  background-color: rgb(29, 115, 152);\n  cursor: pointer;\n}\n\n#player-board > .tile:hover {\n  cursor: grab;\n}\n\nbutton {\n  padding: 5px 20px;\n  font-size: 1rem;\n}\n\n"],sourceRoot:""}]);const u=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var u=0;u<this.length;u++){var s=this[u][0];null!=s&&(a[s]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);n&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var i={},a=[],u=0;u<t.length;u++){var s=t[u],c=n.base?s[0]+n.base:s[0],l=i[c]||0,f="".concat(c," ").concat(l);i[c]=l+1;var h=r(f),y={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==h)e[h].references++,e[h].updater(y);else{var p=o(y,n);n.byIndex=u,e.splice(u,0,{identifier:f,updater:p,references:1})}a.push(f)}return a}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var i=n(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var u=r(i[a]);e[u].references--}for(var s=n(t,o),c=0;c<i.length;c++){var l=r(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,r),i.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;r.g.importScripts&&(t=r.g.location+"");var e=r.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&!t;)t=n[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=t})(),r.nc=void 0,(()=>{const t=r.p+"3c892e61bacc4cdcc924.wav",e=r.p+"5db3e3f25643cdc93303.wav",n=r.p+"df517d2c7745cf1f25d8.wav",o=r.p+"ecb54f5f8c983b5669f9.wav";var i=document.querySelectorAll(".board"),a=document.getElementById("player-board");i.forEach((function(t){var e=t;e.style.display="grid",e.style.border="1px solid black",e.style.backgroundColor="rgb(35, 182, 245)",e.style.borderRadius="5px",e.style.gridTemplateColumns="repeat(10, max(3vw))",e.style.gridTemplateRows="repeat(10, max(3vw))";for(var r=0;r<10;r+=1)for(var n=0;n<10;n+=1){var o=document.createElement("div");o.classList.add("tile"),o.id="".concat(r,"-").concat(n),o.style.border="1px solid black",e.appendChild(o)}}));var u=document.getElementById("computer-board"),s=document.querySelectorAll("#computer-board > .tile"),c=document.querySelectorAll("#player-board > .tile"),l=document.getElementById("turn-indicator"),f=document.getElementById("play-again"),h=document.getElementById("start-game"),y=new Audio(t),p=new Audio(e),v=new Audio(n),d=new Audio(o),m=r(379),b=r.n(m),g=r(795),k=r.n(g),S=r(569),w=r.n(S),A=r(565),E=r.n(A),P=r(216),x=r.n(P),T=r(589),j=r.n(T),C=r(591),B={};function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function I(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,e)||O(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function O(t,e){if(t){if("string"==typeof t)return M(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?M(t,e):void 0}}function M(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function H(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==L(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===L(o)?o:String(o)),n)}var o}B.styleTagTransform=j(),B.setAttributes=E(),B.insert=w().bind(null,"head"),B.domAPI=k(),B.insertStyleElement=x(),b()(C.Z,B),C.Z&&C.Z.locals&&C.Z.locals;var U=function(){function t(e,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.enemyBoard=r,this.playerBoard=n,this.moves=o,this.targetShip=null,this.targetTile=null,this.targetStack=[],this.lastHitTile=null,this.toBlockIfShipSunk=[]}var e,r,n;return e=t,n=[{key:"shuffleArray",value:function(t){for(var e=t.length-1;e>0;e-=1){var r=Math.floor(Math.random()*(e+1)),n=[t[r],t[e]];t[e]=n[0],t[r]=n[1]}return t}}],(r=[{key:"reset",value:function(){this.moves=[],this.targetShip=null,this.targetTile=null,this.targetStack=[],this.lastHitTile=null}},{key:"resetAttackChain",value:function(){this.targetShip=null,this.targetStack=[],this.lastHitTile=null,this.toBlockIfShipSunk=[]}},{key:"setBoard",value:function(t){var e=this;t.forEach((function(t){var r=I(t,2),n=r[0],o=r[1];e.playerBoard.placeShip(n,o)}))}},{key:"attackEnemy",value:function(t){return this.targetTile=t,this.moves.push(t),this.enemyBoard.receiveAttack(t)}},{key:"chooseAttack",value:function(){var t=[parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)];return this.moves.find((function(e){return e[0]===t[0]&&e[1]===t[1]}))?this.chooseAttack():this.attackEnemy(t)}},{key:"continueAttack",value:function(e){var r,n,o=I(e,2),i=o[0],a=o[1];(r=this.targetStack).unshift.apply(r,function(t){if(Array.isArray(t))return M(t)}(n=t.shuffleArray([[i+1,a],[i-1,a],[i,a+1],[i,a-1]]))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||O(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());for(var u=this.targetStack.shift();!(u[0]>=0&&u[0]<=9&&u[1]>=0&&u[1]<=9)||this.moves.find((function(t){return t[0]===u[0]&&t[1]===u[1]}));)u=this.targetStack.shift();return this.attackEnemy(u)}}])&&H(e.prototype,r),n&&H(e,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function N(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,e)||function(t,e){if(t){if("string"==typeof t)return F(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?F(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function F(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function G(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}var z=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[],this.missed=[],this.shipParts=0,this.init()}var e,r;return e=t,r=[{key:"init",value:function(){for(var t=0;t<10;t+=1){this.board[t]=[];for(var e=0;e<10;e+=1)this.board[t].push(null)}}},{key:"reset",value:function(){this.board=[],this.missed=[],this.shipParts=0,this.init()}},{key:"placeShip",value:function(t,e){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=e.length,o=N(t,2),i=o[0],a=o[1];if(r&&(a+n-1>9||this.isInvalidHoriPlacement(i,a,n)))return!1;if(!r&&(i+n-1>9||this.isInvalidVertiPlacement(i,a,n)))return!1;for(var u=0;u<n;u+=1)r?this.board[i][a+u]=e:this.board[i+u][a]=e,this.shipParts+=1;return!0}},{key:"isInvalidHoriPlacement",value:function(t,e,r){for(var n=t-1;n<=t+1;n+=1)for(var o=e-1;o<=e+r;o+=1)if(n>=0&&n<=9&&o>=0&&o<=9&&this.board[n][o])return!0;return!1}},{key:"isInvalidVertiPlacement",value:function(t,e,r){for(var n=t-1;n<=t+r;n+=1)for(var o=e-1;o<=e+1;o+=1)if(n>=0&&n<=9&&o>=0&&o<=9&&this.board[n][o])return!0;return!1}},{key:"receiveAttack",value:function(t){var e=N(t,2),r=e[0],n=e[1],o=this.board[r][n];return o?(o.hit(),this.shipParts-=1,o):(this.missed.push(t),!1)}},{key:"shipsHaveSunk",value:function(){if(0===this.shipParts)return!0}}],r&&G(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function $(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}var Z=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.hits=0}var e,r;return e=t,(r=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length===this.hits}}])&&$(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function J(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Y(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Y(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Y(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function V(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===q(o)?o:String(o)),n)}var o}var D=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.playerBoard=new z,this.enemyBoard=new z,this.player=new U("player",this.enemyBoard,this.playerBoard),this.computer=new U("comp",this.playerBoard,this.enemyBoard),this.eventListeners={},this.currentPlayer=this.player,this.shipLengths=[4,3,3,2,2,2,1,1,1,1]}var e,r;return e=t,r=[{key:"reset",value:function(){this.playerBoard.reset(),this.enemyBoard.reset(),this.player.reset(),this.computer.reset(),this.currentPlayer=this.player,this.eventListeners={},this.init()}},{key:"init",value:function(){this.playerPlaceShips(),this.placeShips(this.enemyBoard),this.onTurnEnd()}},{key:"playerAttacks",value:function(t,e){var r=this.player.attackEnemy(t);this.registerAttack(r,e)||(this.currentPlayer=this.computer,this.signalTurnEnd())}},{key:"computerAttacks",value:function(){var t=this.computer.targetShip?this.computer.continueAttack(this.computer.lastHitTile):this.computer.chooseAttack(),e=10*this.computer.targetTile[0]+this.computer.targetTile[1];this.registerAttack(t,e)||(this.currentPlayer=this.player,this.signalTurnEnd())}},{key:"registerAttack",value:function(t,e){if(t){var r=t.isSunk();this.emit("hit",e),this.currentPlayer.targetShip=t,this.currentPlayer.lastHitTile=this.currentPlayer.targetTile,this.currentPlayer.targetShip.hits>1||r?this.blockAdjacentTiles(this.currentPlayer.lastHitTile,this.currentPlayer.enemyBoard.board,r):this.emit("firstHit",this.currentPlayer.lastHitTile),r&&(this.emit("blockIfShipSunk",this.currentPlayer.toBlockIfShipSunk),this.currentPlayer.resetAttackChain())}else this.emit("miss",e);return this.isGameOver()}},{key:"blockAdjacentTiles",value:function(t,e,r){var n=this,o=J(t,2),i=o[0],a=o[1],u=[[i+1,a],[i-1,a],[i,a+1],[i,a-1]];r&&u.push([i+1,a+1],[i+1,a-1],[i-1,a+1],[i-1,a-1]),u.forEach((function(t){var r=J(t,2),o=r[0],i=r[1];if(o>=0&&o<=9&&i>=0&&i<=9&&!e[o][i]){n.currentPlayer.moves.push(t);var a=10*o+i;n.emit("block",[a])}}))}},{key:"onTurnEnd",value:function(){var t=this;this.on("turnEnd",(function(e){"comp"===e.name&&setTimeout((function(){return t.computerAttacks()}),400)}))}},{key:"signalTurnEnd",value:function(){this.emit("turnEnd",this.currentPlayer)}},{key:"isGameOver",value:function(){if(this.playerBoard.shipsHaveSunk()||this.enemyBoard.shipsHaveSunk())return this.emit("over",this.currentPlayer.name),!0}},{key:"playerPlaceShips",value:function(){this.placeShips(this.playerBoard)}},{key:"placeShips",value:function(t){var e=this;this.shipLengths.forEach((function(r){var n=Math.random()>.5;e.placeShipsHelper(r,n,t)}))}},{key:"placeShipsHelper",value:function(t,e,r){return!!r.placeShip([parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)],new Z(t),e)||this.placeShipsHelper(t,e,r)}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}],r&&V(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function K(t){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},K(t)}function Q(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,e)||function(t,e){if(t){if("string"==typeof t)return W(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?W(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function W(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function X(){X=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",u=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function l(t,e,r,n){var i=e&&e.prototype instanceof m?e:m,a=Object.create(i.prototype),u=new B(n||[]);return o(a,"_invoke",{value:x(t,r,u)}),a}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=l;var h="suspendedStart",y="suspendedYield",p="executing",v="completed",d={};function m(){}function b(){}function g(){}var k={};c(k,a,(function(){return this}));var S=Object.getPrototypeOf,w=S&&S(S(L([])));w&&w!==r&&n.call(w,a)&&(k=w);var A=g.prototype=m.prototype=Object.create(k);function E(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function P(t,e){function r(o,i,a,u){var s=f(t[o],t,i);if("throw"!==s.type){var c=s.arg,l=c.value;return l&&"object"==K(l)&&n.call(l,"__await")?e.resolve(l.__await).then((function(t){r("next",t,a,u)}),(function(t){r("throw",t,a,u)})):e.resolve(l).then((function(t){c.value=t,a(c)}),(function(t){return r("throw",t,a,u)}))}u(s.arg)}var i;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return i=i?i.then(o,o):o()}})}function x(e,r,n){var o=h;return function(i,a){if(o===p)throw new Error("Generator is already running");if(o===v){if("throw"===i)throw a;return{value:t,done:!0}}for(n.method=i,n.arg=a;;){var u=n.delegate;if(u){var s=T(u,n);if(s){if(s===d)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=v,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=p;var c=f(e,r,n);if("normal"===c.type){if(o=n.done?v:y,c.arg===d)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(o=v,n.method="throw",n.arg=c.arg)}}}function T(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,T(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=f(o,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,d;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,d):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,d)}function j(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function C(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function B(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(j,this),this.reset(!0)}function L(e){if(e||""===e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}throw new TypeError(K(e)+" is not iterable")}return b.prototype=g,o(A,"constructor",{value:g,configurable:!0}),o(g,"constructor",{value:b,configurable:!0}),b.displayName=c(g,s,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,g):(t.__proto__=g,c(t,s,"GeneratorFunction")),t.prototype=Object.create(A),t},e.awrap=function(t){return{__await:t}},E(P.prototype),c(P.prototype,u,(function(){return this})),e.AsyncIterator=P,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new P(l(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},E(A),c(A,s,"Generator"),c(A,a,(function(){return this})),c(A,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=L,B.prototype={constructor:B,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return u.type="throw",u.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],u=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var s=n.call(a,"catchLoc"),c=n.call(a,"finallyLoc");if(s&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,d):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),C(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;C(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:L(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),d}},e}function tt(t,e,r,n,o,i,a){try{var u=t[i](a),s=u.value}catch(t){return void r(t)}u.done?e(s):Promise.resolve(s).then(n,o)}function et(t){return function(){var e=this,r=arguments;return new Promise((function(n,o){var i=t.apply(e,r);function a(t){tt(i,n,o,a,u,"next",t)}function u(t){tt(i,n,o,a,u,"throw",t)}a(void 0)}))}}function rt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==K(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==K(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===K(o)?o:String(o)),n)}var o}var nt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=e,this.enemyBoard=u,this.playerBoard=a,this.tiles=s,this.turnUI=l,this.eventListeners={},this.setUpTiles()}var e,r,n;return e=t,r=[{key:"reset",value:function(t){this.eventListeners={},this.resetBoard(),this.game=t,this.init()}},{key:"init",value:function(){this.tiles=s,this.subscribe(),this.playerPlacingBoard(),this.playSound("place")}},{key:"setUpTiles",value:function(){var t=this,e=0;this.tiles.forEach((function(r){var n=e;r.addEventListener("click",(function(e){var o=[parseInt(r.id.charAt(0),10),parseInt(r.id.charAt(2),10)];t.game.playerAttacks(o,n),e.target.style.pointerEvents="none"})),e+=1}))}},{key:"subscribe",value:function(){var t=this;this.game.on("hit",function(){var e=et(X().mark((function e(r){return X().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.renderHit(r),e.next=3,t.playSound("hit");case 3:t.toggleTiles();case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),this.game.on("miss",function(){var e=et(X().mark((function e(r){return X().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.renderMiss(r),e.next=3,t.playSound("miss");case 3:t.toggleTiles();case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),this.game.on("turnEnd",(function(e){t.updateTurnUI(e),t.togglePlay(e)})),this.game.on("over",(function(e){t.gameOverBoard(e),t.playSound("gameover")})),this.game.on("placed",(function(){t.highlightPlayerShips()})),this.game.on("block",(function(e){t.blockTiles(e)})),this.game.on("firstHit",(function(e){t.clueOnFirstHit(e)})),this.game.on("blockIfShipSunk",(function(e){e.forEach((function(e){t.blockTiles(e)})),t.playSound("sunk")})),f.addEventListener("click",(function(){f.style.display="none",t.playerPlacingBoard(),t.emit("reset")})),h.addEventListener("click",(function(){h.style.display="none",t.gameStartBoard(),t.stopSound("place")}))}},{key:"renderHit",value:function(t){this.tiles[t].style.backgroundColor="white"}},{key:"renderMiss",value:function(t){this.tiles[t].style.backgroundColor="rgb(11, 51, 68)"}},{key:"blockTiles",value:function(t){"player"===this.game.currentPlayer.name?(s[t].style.backgroundColor="rgb(11, 51, 68)",s[t].style.pointerEvents="none"):(c[t].style.backgroundColor="rgb(11, 51, 68)",c[t].style.pointerEvents="none")}},{key:"clueOnFirstHit",value:function(t){var e=this,r=Q(t,2),n=r[0],o=r[1],i=[[n+1,o],[n-1,o],[n,o+1],[n,o-1],[n+1,o+1],[n+1,o-1],[n-1,o+1],[n-1,o-1]],a="player"===this.game.currentPlayer.name?s:c;i.forEach((function(t){var r=Q(t,2),n=r[0],o=r[1];if(n>=0&&n<=9&&o>=0&&o<=9){var i=10*n+o;a[i].style.backgroundColor="rgb(11, 51, 68)"===a[i].style.backgroundColor?"rgb(11, 51, 68)":"rgb(112, 162, 184)",e.game.currentPlayer.enemyBoard.board[n][o]||e.game.currentPlayer.toBlockIfShipSunk.push(i)}}))}},{key:"toggleTiles",value:function(){this.tiles=this.tiles===s?c:s}},{key:"togglePlay",value:function(t){"player"===t.name?(this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"):(this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto")}},{key:"updateTurnUI",value:function(t){"player"===t.name?this.turnUI.textContent="Player's Turn":this.turnUI.textContent="Computer's Turn"}},{key:"playerPlacingBoard",value:function(){this.turnUI.textContent="Place your ships!",f.style.display="none",h.style.display="block",this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto"}},{key:"gameStartBoard",value:function(){this.turnUI.textContent="Player's Turn",this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"}},{key:"gameOverBoard",value:function(t){this.turnUI.textContent="".concat(t," wins!"),f.style.display="block",this.freezeBoards()}},{key:"freezeBoards",value:function(){this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="none"}},{key:"resetBoard",value:function(){console.log("Resetting"),[s,c].forEach((function(t){t.forEach((function(t){t.style.backgroundColor="",t.style.removeProperty("pointer-events")}))})),this.turnUI.textContent="BATTLESHIP"}},{key:"highlightPlayerShips",value:function(){var t=this;c.forEach((function(e){var r=[parseInt(e.id.charAt(0),10),parseInt(e.id.charAt(2),10)];t.game.playerBoard.board[r[0]][r[1]]&&(e.style.backgroundColor="yellow")}))}},{key:"playSound",value:(n=et(X().mark((function t(e){return X().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if("gameover"!==e){t.next=5;break}return t.next=3,y.play();case 3:case 8:case 16:t.next=20;break;case 5:if("hit"!==e){t.next=10;break}return t.next=8,p.play();case 10:if("miss"!==e){t.next=13;break}t.next=20;break;case 13:if("place"!==e){t.next=18;break}return t.next=16,v.play();case 18:return t.next=20,d.play();case 20:case"end":return t.stop()}}),t)}))),function(t){return n.apply(this,arguments)})},{key:"stopSound",value:function(t){"gameover"===t?y.pause():"hit"===t?p.pause():"miss"===t||("place"===t?v.pause():d.pause())}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}],r&&rt(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function ot(t){return ot="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ot(t)}function it(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==ot(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==ot(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===ot(o)?o:String(o)),n)}var o}(new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=new D,this.domManager=new nt(this.game)}var e,r;return e=t,(r=[{key:"init",value:function(){this.game.init(),this.domManager.init(),this.playerShipsPlaced(),this.reset()}},{key:"reset",value:function(){var t=this;this.domManager.on("reset",(function(){t.game.reset(),t.domManager.reset(t.game),t.playerShipsPlaced(),t.reset()}))}},{key:"playerShipsPlaced",value:function(){this.game.emit("placed")}}])&&it(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}())).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
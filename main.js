/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var t={591:(t,e,r)=>{r.d(e,{Z:()=>s});var n=r(537),o=r.n(n),i=r(645),a=r.n(i)()(o());a.push([t.id,"*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n  font-family: 'Josefin Sans', sans-serif;\n}\nmain {\n  background-color: white;\n}\n\n.tile {\n  transition: all 0.2s ease-in-out;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(112, 162, 184);\n  background-color: rgb(29, 115, 152);\n  cursor: pointer;\n  scale: 0.94;\n}\n\n#player-board > .tile:hover {\n  cursor: grab;\n}\n\nbutton {\n  padding: 5px 20px;\n  font-size: 1rem;\n}\n\n.board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.indicator, .title {\n  padding: 20px;\n}\n\n.indicator {\n  color: brown;\n  font-size: 1.3rem;\n}\n\n","",{version:3,sources:["webpack://./src/assets/style/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;EACb,uCAAuC;AACzC;AACA;EACE,uBAAuB;AACzB;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,oCAAoC;EACpC,mCAAmC;EACnC,eAAe;EACf,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB",sourcesContent:["*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n  font-family: 'Josefin Sans', sans-serif;\n}\nmain {\n  background-color: white;\n}\n\n.tile {\n  transition: all 0.2s ease-in-out;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(112, 162, 184);\n  background-color: rgb(29, 115, 152);\n  cursor: pointer;\n  scale: 0.94;\n}\n\n#player-board > .tile:hover {\n  cursor: grab;\n}\n\nbutton {\n  padding: 5px 20px;\n  font-size: 1rem;\n}\n\n.board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.indicator, .title {\n  padding: 20px;\n}\n\n.indicator {\n  color: brown;\n  font-size: 1.3rem;\n}\n\n"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var u=this[s][0];null!=u&&(a[u]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);n&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var i={},a=[],s=0;s<t.length;s++){var u=t[s],c=n.base?u[0]+n.base:u[0],l=i[c]||0,f="".concat(c," ").concat(l);i[c]=l+1;var h=r(f),y={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==h)e[h].references++,e[h].updater(y);else{var p=o(y,n);n.byIndex=s,e.splice(s,0,{identifier:f,updater:p,references:1})}a.push(f)}return a}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var i=n(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=r(i[a]);e[s].references--}for(var u=n(t,o),c=0;c<i.length;c++){var l=r(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=u}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,r),i.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;r.g.importScripts&&(t=r.g.location+"");var e=r.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&!t;)t=n[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=t})(),r.nc=void 0,(()=>{const t=r.p+"3c892e61bacc4cdcc924.wav",e=r.p+"5db3e3f25643cdc93303.wav",n=r.p+"df517d2c7745cf1f25d8.wav",o=r.p+"ecb54f5f8c983b5669f9.wav",i=r.p+"ee03ecaad472367bbc74.wav";var a=document.querySelectorAll(".board"),s=document.getElementById("player-board");a.forEach((function(t){var e=t;e.style.display="grid",e.style.border="1px solid black",e.style.backgroundColor="rgb(35, 182, 245)",e.style.borderRadius="5px",e.style.boxShadow="0 5px 10px rgba(0,0,0,0.2)",e.style.gridTemplateColumns="repeat(10, max(3vw))",e.style.gridTemplateRows="repeat(10, max(3vw))";for(var r=0;r<10;r+=1)for(var n=0;n<10;n+=1){var o=document.createElement("div");o.classList.add("tile"),o.id="".concat(r,"-").concat(n),o.style.border="1px solid white",e.style.borderRadius="2px",e.appendChild(o)}}));var u=document.getElementById("computer-board"),c=document.querySelectorAll("#computer-board > .tile"),l=document.querySelectorAll("#player-board > .tile"),f=document.getElementById("turn-indicator"),h=document.getElementById("computer-move-indicator"),y=document.getElementById("player-move-indicator"),p=document.getElementById("play-again"),v=document.getElementById("start-game"),d=new Audio(t),m=new Audio(e),b=new Audio(n),g=new Audio(o),A=new Audio(i),k=r(379),S=r.n(k),w=r(795),E=r.n(w),x=r(569),C=r.n(x),P=r(565),B=r.n(P),T=r(216),j=r.n(T),I=r(589),L=r.n(I),O=r(591),M={};function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function U(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==e);u=!0);}catch(t){c=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(t,e)||_(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(t,e){if(t){if("string"==typeof t)return N(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?N(t,e):void 0}}function N(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function z(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==H(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===H(o)?o:String(o)),n)}var o}M.styleTagTransform=L(),M.setAttributes=B(),M.insert=C().bind(null,"head"),M.domAPI=E(),M.insertStyleElement=j(),S()(O.Z,M),O.Z&&O.Z.locals&&O.Z.locals;var F=function(){function t(e,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.enemyBoard=r,this.playerBoard=n,this.moves=o,this.targetShip=null,this.targetTile=null,this.targetStack=[],this.lastHitTile=null,this.toBlockIfShipSunk=[]}var e,r,n;return e=t,n=[{key:"shuffleArray",value:function(t){for(var e=t.length-1;e>0;e-=1){var r=Math.floor(Math.random()*(e+1)),n=[t[r],t[e]];t[e]=n[0],t[r]=n[1]}return t}}],(r=[{key:"reset",value:function(){this.moves=[],this.targetShip=null,this.targetTile=null,this.targetStack=[],this.lastHitTile=null}},{key:"resetAttackChain",value:function(){this.targetShip=null,this.targetStack=[],this.lastHitTile=null,this.toBlockIfShipSunk=[]}},{key:"setBoard",value:function(t){var e=this;t.forEach((function(t){var r=U(t,2),n=r[0],o=r[1];e.playerBoard.placeShip(n,o)}))}},{key:"attackEnemy",value:function(t){return this.targetTile=t,this.moves.push(t),this.enemyBoard.receiveAttack(t)}},{key:"chooseAttack",value:function(){var t=[parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)];return this.moves.find((function(e){return e[0]===t[0]&&e[1]===t[1]}))?this.chooseAttack():this.attackEnemy(t)}},{key:"continueAttack",value:function(e){var r,n,o=U(e,2),i=o[0],a=o[1];(r=this.targetStack).unshift.apply(r,function(t){if(Array.isArray(t))return N(t)}(n=t.shuffleArray([[i+1,a],[i-1,a],[i,a+1],[i,a-1]]))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||_(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());for(var s=this.targetStack.shift();!(s[0]>=0&&s[0]<=9&&s[1]>=0&&s[1]<=9)||this.moves.find((function(t){return t[0]===s[0]&&t[1]===s[1]}));)s=this.targetStack.shift();return this.attackEnemy(s)}}])&&z(e.prototype,r),n&&z(e,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function G(t){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},G(t)}function Y(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==e);u=!0);}catch(t){c=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return R(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?R(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function $(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==G(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===G(o)?o:String(o)),n)}var o}var Z=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[],this.missed=[],this.shipParts=0,this.init()}var e,r;return e=t,r=[{key:"init",value:function(){for(var t=0;t<10;t+=1){this.board[t]=[];for(var e=0;e<10;e+=1)this.board[t].push(null)}}},{key:"reset",value:function(){this.board=[],this.missed=[],this.shipParts=0,this.init()}},{key:"placeShip",value:function(t,e){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=e.length,o=Y(t,2),i=o[0],a=o[1];if(r&&(a+n-1>9||this.isInvalidHoriPlacement(i,a,n)))return!1;if(!r&&(i+n-1>9||this.isInvalidVertiPlacement(i,a,n)))return!1;for(var s=0;s<n;s+=1)r?this.board[i][a+s]=e:this.board[i+s][a]=e,this.shipParts+=1;return!0}},{key:"isInvalidHoriPlacement",value:function(t,e,r){for(var n=t-1;n<=t+1;n+=1)for(var o=e-1;o<=e+r;o+=1)if(n>=0&&n<=9&&o>=0&&o<=9&&this.board[n][o])return!0;return!1}},{key:"isInvalidVertiPlacement",value:function(t,e,r){for(var n=t-1;n<=t+r;n+=1)for(var o=e-1;o<=e+1;o+=1)if(n>=0&&n<=9&&o>=0&&o<=9&&this.board[n][o])return!0;return!1}},{key:"receiveAttack",value:function(t){var e=Y(t,2),r=e[0],n=e[1],o=this.board[r][n];return o?(o.hit(),this.shipParts-=1,o):(this.missed.push(t),!1)}},{key:"shipsHaveSunk",value:function(){if(0===this.shipParts)return!0}}],r&&$(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function J(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===q(o)?o:String(o)),n)}var o}var V=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.hits=0}var e,r;return e=t,(r=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length===this.hits}}])&&J(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function D(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==e);u=!0);}catch(t){c=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return K(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?K(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Q(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==W(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===W(o)?o:String(o)),n)}var o}var X=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.playerBoard=new Z,this.enemyBoard=new Z,this.player=new F("player",this.enemyBoard,this.playerBoard),this.computer=new F("comp",this.playerBoard,this.enemyBoard),this.eventListeners={},this.currentPlayer=this.player,this.shipLengths=[4,3,3,2,2,2,1,1,1,1]}var e,r;return e=t,r=[{key:"reset",value:function(){this.playerBoard.reset(),this.enemyBoard.reset(),this.player.reset(),this.computer.reset(),this.currentPlayer=this.player,this.eventListeners={},this.init()}},{key:"init",value:function(){this.playerPlaceShips(),this.placeShips(this.enemyBoard),this.onTurnEnd()}},{key:"playerAttacks",value:function(t,e){var r=this.player.attackEnemy(t);this.registerAttack(r,e)||(this.currentPlayer=this.computer,this.signalTurnEnd())}},{key:"computerAttacks",value:function(){var t=this.computer.targetShip?this.computer.continueAttack(this.computer.lastHitTile):this.computer.chooseAttack(),e=10*this.computer.targetTile[0]+this.computer.targetTile[1];this.registerAttack(t,e)||(this.currentPlayer=this.player,this.signalTurnEnd())}},{key:"registerAttack",value:function(t,e){var r=this;if(t){var n=t.isSunk();this.emit("hit",e),this.currentPlayer.targetShip=t,this.currentPlayer.lastHitTile=this.currentPlayer.targetTile,this.currentPlayer.targetShip.hits>1||n?this.blockAdjacentTiles(this.currentPlayer.lastHitTile,this.currentPlayer.enemyBoard.board,n):this.emit("firstHit",this.currentPlayer.lastHitTile),n&&(this.emit("blockIfShipSunk",this.currentPlayer.toBlockIfShipSunk),this.currentPlayer.toBlockIfShipSunk.forEach((function(t){var e=[parseInt(t/10,10),t%10],n=e[0],o=e[1];r.currentPlayer.moves.push([n,o])})),this.currentPlayer.resetAttackChain())}else this.emit("miss",e);return this.isGameOver()}},{key:"blockAdjacentTiles",value:function(t,e,r){var n=this,o=D(t,2),i=o[0],a=o[1],s=[[i+1,a],[i-1,a],[i,a+1],[i,a-1]];r&&s.push([i+1,a+1],[i+1,a-1],[i-1,a+1],[i-1,a-1]),s.forEach((function(t){var r=D(t,2),o=r[0],i=r[1];if(o>=0&&o<=9&&i>=0&&i<=9&&!e[o][i]){n.currentPlayer.moves.push(t);var a=10*o+i;n.emit("block",[a])}}))}},{key:"onTurnEnd",value:function(){var t=this;this.on("turnEnd",(function(e){"comp"===e.name&&setTimeout((function(){return t.computerAttacks()}),400)}))}},{key:"signalTurnEnd",value:function(){this.emit("turnEnd",this.currentPlayer)}},{key:"isGameOver",value:function(){if(this.playerBoard.shipsHaveSunk()||this.enemyBoard.shipsHaveSunk())return this.emit("over",this.currentPlayer.name),!0}},{key:"playerPlaceShips",value:function(){this.placeShips(this.playerBoard)}},{key:"placeShips",value:function(t){var e=this;this.shipLengths.forEach((function(r){var n=Math.random()>.5;e.placeShipsHelper(r,n,t)}))}},{key:"placeShipsHelper",value:function(t,e,r){return!!r.placeShip([parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)],new V(t),e)||this.placeShipsHelper(t,e,r)}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}],r&&Q(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function tt(t){return tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},tt(t)}function et(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,s=[],u=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(s.push(n.value),s.length!==e);u=!0);}catch(t){c=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return rt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?rt(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function rt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function nt(){nt=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function l(t,e,r,n){var i=e&&e.prototype instanceof m?e:m,a=Object.create(i.prototype),s=new j(n||[]);return o(a,"_invoke",{value:C(t,r,s)}),a}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=l;var h="suspendedStart",y="suspendedYield",p="executing",v="completed",d={};function m(){}function b(){}function g(){}var A={};c(A,a,(function(){return this}));var k=Object.getPrototypeOf,S=k&&k(k(I([])));S&&S!==r&&n.call(S,a)&&(A=S);var w=g.prototype=m.prototype=Object.create(A);function E(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function x(t,e){function r(o,i,a,s){var u=f(t[o],t,i);if("throw"!==u.type){var c=u.arg,l=c.value;return l&&"object"==tt(l)&&n.call(l,"__await")?e.resolve(l.__await).then((function(t){r("next",t,a,s)}),(function(t){r("throw",t,a,s)})):e.resolve(l).then((function(t){c.value=t,a(c)}),(function(t){return r("throw",t,a,s)}))}s(u.arg)}var i;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return i=i?i.then(o,o):o()}})}function C(e,r,n){var o=h;return function(i,a){if(o===p)throw new Error("Generator is already running");if(o===v){if("throw"===i)throw a;return{value:t,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var u=P(s,n);if(u){if(u===d)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=v,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=p;var c=f(e,r,n);if("normal"===c.type){if(o=n.done?v:y,c.arg===d)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(o=v,n.method="throw",n.arg=c.arg)}}}function P(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,P(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=f(o,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,d;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,d):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,d)}function B(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function j(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(B,this),this.reset(!0)}function I(e){if(e||""===e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}throw new TypeError(tt(e)+" is not iterable")}return b.prototype=g,o(w,"constructor",{value:g,configurable:!0}),o(g,"constructor",{value:b,configurable:!0}),b.displayName=c(g,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,g):(t.__proto__=g,c(t,u,"GeneratorFunction")),t.prototype=Object.create(w),t},e.awrap=function(t){return{__await:t}},E(x.prototype),c(x.prototype,s,(function(){return this})),e.AsyncIterator=x,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new x(l(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},E(w),c(w,u,"Generator"),c(w,a,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=I,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return s.type="throw",s.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var u=n.call(a,"catchLoc"),c=n.call(a,"finallyLoc");if(u&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,d):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),T(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;T(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:I(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),d}},e}function ot(t,e,r,n,o,i,a){try{var s=t[i](a),u=s.value}catch(t){return void r(t)}s.done?e(u):Promise.resolve(u).then(n,o)}function it(t){return function(){var e=this,r=arguments;return new Promise((function(n,o){var i=t.apply(e,r);function a(t){ot(i,n,o,a,s,"next",t)}function s(t){ot(i,n,o,a,s,"throw",t)}a(void 0)}))}}function at(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==tt(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==tt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===tt(o)?o:String(o)),n)}var o}var st=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=e,this.enemyBoard=u,this.playerBoard=s,this.tiles=c,this.turnUI=f,this.eventListeners={},this.setUpTiles()}var e,r,n;return e=t,r=[{key:"reset",value:function(t){this.eventListeners={},this.resetBoard(),this.game=t,this.init()}},{key:"init",value:function(){this.tiles=c,this.subscribe(),this.playerPlacingBoard(),this.playSound("place")}},{key:"setUpTiles",value:function(){var t=this,e=0;this.tiles.forEach((function(r){var n=e;r.addEventListener("click",(function(e){var o=[parseInt(r.id.charAt(0),10),parseInt(r.id.charAt(2),10)];t.game.playerAttacks(o,n),e.target.style.pointerEvents="none"})),e+=1}))}},{key:"subscribe",value:function(){var t=this;this.game.on("hit",function(){var e=it(nt().mark((function e(r){return nt().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.renderHit(r),e.next=3,t.playSound("hit");case 3:t.toggleTiles();case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),this.game.on("miss",function(){var e=it(nt().mark((function e(r){return nt().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.renderMiss(r),e.next=3,t.playSound("miss");case 3:t.toggleTiles();case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),this.game.on("turnEnd",(function(e){t.updateTurnUI(e),t.togglePlay(e)})),this.game.on("over",(function(e){t.gameOverBoard(e),t.playSound("gameover")})),this.game.on("placed",(function(){t.highlightPlayerShips()})),this.game.on("block",(function(e){t.blockTiles(e)})),this.game.on("firstHit",(function(e){t.clueOnFirstHit(e)})),this.game.on("blockIfShipSunk",(function(e){e.forEach((function(e){t.blockTiles(e)})),t.playSound("sunk"),"player"===t.game.currentPlayer.name?y.textContent="You sunk a ship!":h.textContent="Enemy sunk a ship!"})),p.addEventListener("click",(function(){p.style.display="none",t.playerPlacingBoard(),t.emit("reset")})),v.addEventListener("click",(function(){v.style.display="none",t.gameStartBoard(),t.stopSound("place")}))}},{key:"renderHit",value:function(t){this.tiles[t].style.backgroundColor="white","player"===this.game.currentPlayer.name?y.textContent="You hit a ship!":h.textContent="Enemy hit a ship!"}},{key:"renderMiss",value:function(t){this.tiles[t].style.backgroundColor="rgb(11, 51, 68)","player"===this.game.currentPlayer.name?y.textContent="You missed":h.textContent="Enemy missed"}},{key:"blockTiles",value:function(t){"player"===this.game.currentPlayer.name?(c[t].style.backgroundColor="rgb(11, 51, 68)",c[t].style.pointerEvents="none"):(l[t].style.backgroundColor="rgb(11, 51, 68)",l[t].style.pointerEvents="none")}},{key:"clueOnFirstHit",value:function(t){var e=this,r=et(t,2),n=r[0],o=r[1],i=[[n+1,o],[n-1,o],[n,o+1],[n,o-1],[n+1,o+1],[n+1,o-1],[n-1,o+1],[n-1,o-1]],a="player"===this.game.currentPlayer.name?c:l;i.forEach((function(t){var r=et(t,2),n=r[0],o=r[1];if(n>=0&&n<=9&&o>=0&&o<=9){var i=10*n+o;a[i].style.backgroundColor="rgb(11, 51, 68)"===a[i].style.backgroundColor?"rgb(11, 51, 68)":"rgb(112, 162, 184)",e.game.currentPlayer.enemyBoard.board[n][o]||e.game.currentPlayer.toBlockIfShipSunk.push(i)}}))}},{key:"toggleTiles",value:function(){this.tiles=this.tiles===c?l:c}},{key:"togglePlay",value:function(t){"player"===t.name?(this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"):(this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto")}},{key:"updateTurnUI",value:function(t){"player"===t.name?this.turnUI.textContent="Player's Turn":this.turnUI.textContent="Computer's Turn"}},{key:"playerPlacingBoard",value:function(){this.turnUI.textContent="Place your ships!",p.style.display="none",v.style.display="block",this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto"}},{key:"gameStartBoard",value:function(){this.turnUI.textContent="Player's Turn",this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"}},{key:"gameOverBoard",value:function(t){this.turnUI.textContent="".concat(t," wins!"),p.style.display="block",this.freezeBoards()}},{key:"freezeBoards",value:function(){this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="none"}},{key:"resetBoard",value:function(){[c,l].forEach((function(t){t.forEach((function(t){t.style.backgroundColor="",t.style.removeProperty("pointer-events")}))})),this.turnUI.textContent="BATTLESHIP",y.textContent="---",h.textContent="---"}},{key:"highlightPlayerShips",value:function(){var t=this;l.forEach((function(e){var r=[parseInt(e.id.charAt(0),10),parseInt(e.id.charAt(2),10)];t.game.playerBoard.board[r[0]][r[1]]&&(e.style.backgroundColor="yellow")}))}},{key:"playSound",value:(n=it(nt().mark((function t(e){return nt().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if("gameover"!==e){t.next=5;break}return t.next=3,d.play();case 3:case 8:case 13:case 18:t.next=22;break;case 5:if("hit"!==e){t.next=10;break}return t.next=8,m.play();case 10:if("miss"!==e){t.next=15;break}return t.next=13,A.play();case 15:if("place"!==e){t.next=20;break}return t.next=18,b.play();case 20:return t.next=22,g.play();case 22:case"end":return t.stop()}}),t)}))),function(t){return n.apply(this,arguments)})},{key:"stopSound",value:function(t){"gameover"===t?d.pause():"hit"===t?m.pause():"miss"===t?A.pause():"place"===t?b.pause():g.pause()}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}],r&&at(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function ut(t){return ut="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ut(t)}function ct(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==ut(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==ut(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===ut(o)?o:String(o)),n)}var o}(new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=new X,this.domManager=new st(this.game)}var e,r;return e=t,(r=[{key:"init",value:function(){this.game.init(),this.domManager.init(),this.playerShipsPlaced(),this.reset()}},{key:"reset",value:function(){var t=this;this.domManager.on("reset",(function(){t.game.reset(),t.domManager.reset(t.game),t.playerShipsPlaced(),t.reset()}))}},{key:"playerShipsPlaced",value:function(){this.game.emit("placed")}}])&&ct(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}())).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var t={591:(t,e,n)=>{n.d(e,{Z:()=>s});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,"*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}","",{version:3,sources:["webpack://./src/assets/style/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,oCAAoC;EACpC,eAAe;AACjB",sourcesContent:["*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var u=this[s][0];null!=u&&(a[u]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},a=[],s=0;s<t.length;s++){var u=t[s],l=r.base?u[0]+r.base:u[0],c=i[l]||0,f="".concat(l," ").concat(c);i[l]=c+1;var y=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==y)e[y].references++,e[y].updater(p);else{var h=o(p,r);r.byIndex=s,e.splice(s,0,{identifier:f,updater:h,references:1})}a.push(f)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=n(i[a]);e[s].references--}for(var u=r(t,o),l=0;l<i.length;l++){var c=n(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=u}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{document.querySelectorAll(".board").forEach((function(t){var e=t;e.style.display="grid",e.style.border="1px solid black",e.style.gridTemplateColumns="repeat(10, min(40px))",e.style.gridTemplateRows="repeat(10, 40px)";for(var n=0;n<10;n+=1)for(var r=0;r<10;r+=1){var o=document.createElement("div");o.classList.add("tile"),o.id="".concat(n,"-").concat(r),o.style.border="1px solid black",e.appendChild(o)}}));var t=document.getElementById("player-board"),e=document.getElementById("computer-board"),r=document.querySelectorAll("#computer-board > .tile"),o=document.querySelectorAll("#player-board > .tile"),i=document.getElementById("turn-indicator"),a=document.getElementById("play-again"),s=n(379),u=n.n(s),l=n(795),c=n.n(l),f=n(569),y=n.n(f),p=n(565),h=n.n(p),v=n(216),m=n.n(v),d=n(589),b=n.n(d),g=n(591),S={};function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}S.styleTagTransform=b(),S.setAttributes=h(),S.insert=y().bind(null,"head"),S.domAPI=c(),S.insertStyleElement=m(),u()(g.Z,S),g.Z&&g.Z.locals&&g.Z.locals;var E=function(){function t(e,n,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.enemyBoard=n,this.playerBoard=r,this.moves=o,this.targetShip=null,this.targetTile=null}var e,n;return e=t,(n=[{key:"reset",value:function(){this.moves=[],this.targetShip=null,this.targetTile=null}},{key:"setBoard",value:function(t){var e=this;t.forEach((function(t){var n,r,o=(r=2,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,s=[],u=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(s.push(r.value),s.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return s}}(n,r)||function(t,e){if(t){if("string"==typeof t)return w(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?w(t,e):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];e.playerBoard.placeShip(i,a)}))}},{key:"attackEnemy",value:function(t){return this.enemyBoard.receiveAttack(t)}},{key:"chooseAttack",value:function(){var t=[parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)];return this.moves.find((function(e){return e[0]===t[0]&&e[1]===t[1]}))?this.chooseAttack():(this.targetTile=t,this.moves.push(t),this.attackEnemy(t))}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function P(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,s=[],u=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(s.push(r.value),s.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return j(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?j(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function j(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function B(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}var C=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[],this.missed=[],this.shipParts=0,this.init()}var e,n;return e=t,(n=[{key:"init",value:function(){for(var t=0;t<10;t+=1){this.board[t]=[];for(var e=0;e<10;e+=1)this.board[t].push(null)}}},{key:"reset",value:function(){this.board=[],this.missed=[],this.shipParts=0,this.init()}},{key:"placeShip",value:function(t,e){var n=e.length,r=P(t,2),o=r[0],i=r[1];if(!(i+n-1>9))for(var a=0;a<n;a+=1)this.board[o][i+a]=e,this.shipParts+=1}},{key:"receiveAttack",value:function(t){var e=P(t,2),n=e[0],r=e[1],o=this.board[n][r];return o?(o.hit(),this.shipParts-=1,!0):(this.missed.push(t),!1)}},{key:"shipsHaveSunk",value:function(){if(0===this.shipParts)return!0}}])&&B(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===x(o)?o:String(o)),r)}var o}var L=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.hits=0}var e,n;return e=t,(n=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length===this.hits}}])&&I(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function M(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var U=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.playerBoard=new C,this.enemyBoard=new C,this.player=new E("player",this.enemyBoard,this.playerBoard),this.computer=new E("comp",this.playerBoard,this.enemyBoard),this.eventListeners={},this.currentPlayer=this.player}var e,n;return e=t,(n=[{key:"reset",value:function(){this.playerBoard.reset(),this.enemyBoard.reset(),this.player.reset(),this.computer.reset(),this.currentPlayer=this.player,this.eventListeners={}}},{key:"init",value:function(){var t=this;this.player.setBoard([[[5,1],new L(1)]]),this.computer.setBoard([[[6,5],new L(3)]]),this.computer.setBoard([[[4,3],new L(2)]]),this.on("turnEnd",(function(e){"comp"===e.name&&setTimeout((function(){return t.computerAttacks()}),400)}))}},{key:"playerAttacks",value:function(t,e){console.log("i attk");var n=this.player.attackEnemy(t);this.registerAttack(n,e)||(this.currentPlayer=this.computer,this.signalTurnEnd())}},{key:"computerAttacks",value:function(){console.log("wers");var t=this.computer.chooseAttack(),e=10*this.computer.targetTile[0]+this.computer.targetTile[1];this.registerAttack(t,e)||(this.currentPlayer=this.player,this.signalTurnEnd())}},{key:"registerAttack",value:function(t,e){return t?this.emit("hit",e):this.emit("miss",e),this.isGameOver()}},{key:"signalTurnEnd",value:function(){this.emit("turnEnd",this.currentPlayer)}},{key:"isGameOver",value:function(){if(this.playerBoard.shipsHaveSunk()||this.enemyBoard.shipsHaveSunk())return this.emit("over",this.currentPlayer.name),!0}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&M(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==H(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===H(o)?o:String(o)),r)}var o}var N=function(){function n(o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.game=o,this.enemyBoard=e,this.playerBoard=t,this.tiles=r,this.turnUI=i,this.eventListeners={}}var s,u;return s=n,(u=[{key:"init",value:function(){var t=this,e=0;this.tiles.forEach((function(n){var r=e;n.addEventListener("click",(function(e){var o=[parseInt(n.id.charAt(0),10),parseInt(n.id.charAt(2),10)];t.game.playerAttacks(o,r),e.target.style.pointerEvents="none"})),e+=1})),this.game.on("hit",(function(e){t.renderHit(e),t.toggleTiles()})),this.game.on("miss",(function(e){t.renderMiss(e),t.toggleTiles()})),this.game.on("turnEnd",(function(e){t.updateTurnUI(e),t.togglePlay(e)})),a.style.display="none",a.addEventListener("click",(function(){t.emit("reset")}))}},{key:"renderHit",value:function(t){this.tiles[t].style.backgroundColor="red"}},{key:"renderMiss",value:function(t){this.tiles[t].style.backgroundColor="gray"}},{key:"toggleTiles",value:function(){console.log("wtf"),this.tiles=this.tiles===r?o:r}},{key:"togglePlay",value:function(t){"player"===t.name?(this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"):(this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto")}},{key:"updateTurnUI",value:function(t){"player"===t.name?this.turnUI.textContent="Player's Turn":this.turnUI.textContent="Computer's Turn"}},{key:"disableBoard",value:function(t){this.turnUI.textContent="".concat(t," wins!"),this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="none",a.style.display="block"}},{key:"resetBoard",value:function(){[r,o].forEach((function(t){t.forEach((function(t){t.style.backgroundColor="white",t.style.pointerEvents="auto"}))})),this.turnUI.textContent="BATTLESHIP",this.playerBoard.style.pointerEvents="none"}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&R(s.prototype,u),Object.defineProperty(s,"prototype",{writable:!1}),n}();function Z(t){return Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Z(t)}function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==Z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===Z(o)?o:String(o)),r)}var o}(new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=new U,this.domManager=new N(this.game)}var e,n;return e=t,(n=[{key:"init",value:function(){var t=this;this.game.init(),this.domManager.init(),this.game.on("over",(function(e){t.domManager.disableBoard(e)})),this.domManager.on("reset",(function(){}))}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}())).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
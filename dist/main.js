(()=>{"use strict";var t={591:(t,e,r)=>{r.d(e,{Z:()=>u});var n=r(537),o=r.n(n),i=r(645),a=r.n(i)()(o());a.push([t.id,"body, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}","",{version:3,sources:["webpack://./src/assets/style/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,oCAAoC;EACpC,eAAe;AACjB",sourcesContent:["body, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}"],sourceRoot:""}]);const u=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var u=0;u<this.length;u++){var s=this[u][0];null!=s&&(a[s]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);n&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var i={},a=[],u=0;u<t.length;u++){var s=t[u],c=n.base?s[0]+n.base:s[0],l=i[c]||0,f="".concat(c," ").concat(l);i[c]=l+1;var y=r(f),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==y)e[y].references++,e[y].updater(p);else{var m=o(p,n);n.byIndex=u,e.splice(u,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var i=n(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var u=r(i[a]);e[u].references--}for(var s=n(t,o),c=0;c<i.length;c++){var l=r(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,r),i.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{document.querySelectorAll(".board").forEach((function(t){var e=t;e.style.display="grid",e.style.border="1px solid black",e.style.gridTemplateColumns="repeat(10, min(40px))",e.style.gridTemplateRows="repeat(10, 40px)";for(var r=0;r<10;r+=1)for(var n=0;n<10;n+=1){var o=document.createElement("div");o.classList.add("tile"),o.id="".concat(r,"-").concat(n),o.style.border="1px solid black",e.appendChild(o)}}));var t=document.getElementById("player-board"),e=document.getElementById("computer-board"),n=document.querySelectorAll("#computer-board > .tile"),o=document.querySelectorAll("#player-board > .tile"),i=document.getElementById("turn-indicator"),a=r(379),u=r.n(a),s=r(795),c=r.n(s),l=r(569),f=r.n(l),y=r(565),p=r.n(y),m=r(216),v=r.n(m),d=r(589),h=r.n(d),b=r(591),g={};function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===S(o)?o:String(o)),n)}var o}g.styleTagTransform=h(),g.setAttributes=p(),g.insert=f().bind(null,"head"),g.domAPI=c(),g.insertStyleElement=v(),u()(b.Z,g),b.Z&&b.Z.locals&&b.Z.locals;var k=function(){function t(e,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.enemyBoard=r,this.playerBoard=n,this.moves=o,this.targetShip=null,this.targetTile=null}var e,r;return e=t,(r=[{key:"setBoard",value:function(t){var e=this;t.forEach((function(t){var r,n,o=(n=2,function(t){if(Array.isArray(t))return t}(r=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(r,n)||function(t,e){if(t){if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?w(t,e):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];e.playerBoard.placeShip(i,a)}))}},{key:"attackEnemy",value:function(t){return this.enemyBoard.receiveAttack(t)}},{key:"chooseAttack",value:function(){var t=[parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)];return this.moves.find((function(e){return e[0]===t[0]&&e[1]===t[1]}))?this.chooseAttack():(this.targetTile=t,this.moves.push(t),this.attackEnemy(t))}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function j(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,e)||function(t,e){if(t){if("string"==typeof t)return C(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?C(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function T(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==E(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}var P=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[],this.missed=[],this.shipParts=0,this.init()}var e,r;return e=t,(r=[{key:"init",value:function(){for(var t=0;t<10;t+=1){this.board[t]=[];for(var e=0;e<10;e+=1)this.board[t].push(null)}}},{key:"placeShip",value:function(t,e){var r=e.length,n=j(t,2),o=n[0],i=n[1];if(!(i+r-1>9))for(var a=0;a<r;a+=1)this.board[o][i+a]=e,this.shipParts+=1}},{key:"receiveAttack",value:function(t){var e=j(t,2),r=e[0],n=e[1],o=this.board[r][n];return o?(o.hit(),this.shipParts-=1,!0):(this.missed.push(t),!1)}},{key:"shipsHaveSunk",value:function(){if(0===this.shipParts)return!0}}])&&T(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function B(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}var I=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.hits=0}var e,r;return e=t,(r=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length===this.hits}}])&&B(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function M(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}var L=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.playerBoard=new P,this.enemyBoard=new P,this.player=new k("player",this.enemyBoard,this.playerBoard),this.computer=new k("comp",this.playerBoard,this.enemyBoard),this.eventListeners={},this.currentPlayer=this.player}var e,r;return e=t,(r=[{key:"init",value:function(){var t=this;this.player.setBoard([[[6,5],new I(3)]]),this.computer.setBoard([[[6,5],new I(3)]]),this.on("turnEnd",(function(e){"comp"===e.name&&t.computerAttacks()}))}},{key:"playerAttacks",value:function(t,e){this.player.attackEnemy(t)?this.emit("hit",e):this.emit("miss",e),this.emit("turnEnd",this.computer)}},{key:"computerAttacks",value:function(){var t=this.computer.chooseAttack(),e=10*this.computer.targetTile[0]+this.computer.targetTile[1];t?this.emit("hit",e):this.emit("miss",e),this.emit("turnEnd",this.player)}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&M(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function R(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==U(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===U(o)?o:String(o)),n)}var o}var H=function(){function r(o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),this.game=o,this.enemyBoard=e,this.playerBoard=t,this.tiles=n,this.turnUI=i}var a,u;return a=r,(u=[{key:"init",value:function(){var t=this,e=0;this.tiles.forEach((function(r){var n=e;r.addEventListener("click",(function(){var e=[parseInt(r.id.charAt(0),10),parseInt(r.id.charAt(2),10)];t.game.playerAttacks(e,n),r.style.pointerEvents="none"})),e+=1})),this.game.on("turnEnd",(function(e){t.updateTurnUI(e),t.toggleTiles(e)})),this.game.on("hit",(function(e){t.renderHit(e),t.tiles=t.tiles===n?o:n})),this.game.on("miss",(function(e){t.renderMiss(e),t.tiles=t.tiles===n?o:n}))}},{key:"renderHit",value:function(t){this.tiles[t].style.backgroundColor="red"}},{key:"renderMiss",value:function(t){this.tiles[t].style.backgroundColor="gray"}},{key:"toggleTiles",value:function(t){"comp"===t.name?(this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"):(this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto")}},{key:"updateTurnUI",value:function(t){"comp"===t.name?this.turnUI.textContent="Player's Turn":this.turnUI.textContent="Computer's Turn"}}])&&R(a.prototype,u),Object.defineProperty(a,"prototype",{writable:!1}),r}();function N(t){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},N(t)}function Z(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==N(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==N(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===N(o)?o:String(o)),n)}var o}(new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=new L,this.domManager=new H(this.game)}var e,r;return e=t,(r=[{key:"init",value:function(){this.game.init(),this.domManager.init()}}])&&Z(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}())).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBTWdJLGNBQWdCLE9BQ3RDM0wsS0FBSzJILFlBQVloRSxNQUFNZ0ksY0FBZ0IsT0FFM0MsR0FBQyxDQUFBdkYsSUFBQSxlQUFBcUMsTUFFRCxTQUFhZ0MsR0FDZSxTQUF2QkEsRUFBY3RDLEtBQ2ZuSSxLQUFLc0wsT0FBT1csWUFBYyxnQkFFMUJqTSxLQUFLc0wsT0FBT1csWUFBYyxpQkFFOUIsTSxvRUFBQ2YsQ0FBQSxDQTdEK0IsRyxvcUJDRXJCLElDRG1CLFdBQzlCLFNBQUFnQixLLDRGQUFjNUQsQ0FBQSxLQUFBNEQsR0FDWmxNLEtBQUttTCxLQUFPLElBQUlkLEVBQ2hCckssS0FBS21NLFdBQWEsSUFBSUMsRUFBV3BNLEtBQUttTCxLQUN4QyxDLFFBS0MsTyxFQUxBZSxHLEVBQUEsRUFBQTlGLElBQUEsT0FBQXFDLE1BRUQsV0FDRXpJLEtBQUttTCxLQUFLdkIsT0FDVjVKLEtBQUttTSxXQUFXdkMsTUFDbEIsTSxvRUFBQ3NDLENBQUEsQ0FUNkIsS0RFM0J0QyxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9hc3NldHMvc3R5bGUvc3R5bGUuY3NzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9qcy9kb20uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9hc3NldHMvc3R5bGUvc3R5bGUuY3NzPzkwZjciLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9qcy9wbGF5ZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9qcy9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9qcy9zaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvanMvZ2FtZUxvZ2ljLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvanMvZG9tTWFuYWdlci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2pzL2luZGV4LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvanMvZ2FtZU1hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHksIDo6YmVmb3JlLCA6OmFmdGVyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4jY29tcHV0ZXItYm9hcmQgPiAudGlsZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDcsIDIxMywgMjE4KTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHNCQUFzQjtFQUN0QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsZUFBZTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5LCA6OmJlZm9yZSwgOjphZnRlciB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbiNjb21wdXRlci1ib2FyZCA+IC50aWxlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDcsIDIxMywgMjE4KTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImNvbnN0IGJvYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ib2FyZCcpO1xuLy8gY29uc3QgYm9hcmRDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYm9hcmQtY29udGFpbmVyJyk7XG5cblxuYm9hcmRzLmZvckVhY2goKGIpID0+IHtcbiAgY29uc3QgYm9hcmQgPSBiO1xuICBib2FyZC5zdHlsZS5kaXNwbGF5ID0gJ2dyaWQnO1xuICBib2FyZC5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIGJsYWNrJztcbiAgYm9hcmQuc3R5bGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9ICdyZXBlYXQoMTAsIG1pbig0MHB4KSknO1xuICBib2FyZC5zdHlsZS5ncmlkVGVtcGxhdGVSb3dzID0gJ3JlcGVhdCgxMCwgNDBweCknO1xuICBmb3IobGV0IGkgPSAwOyBpIDwgMTA7IGkgKz0gMSkge1xuICAgIGZvcihsZXQgaiA9IDA7IGogPCAxMDsgaiArPSAxKSB7XG4gICAgICBjb25zdCB0aWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICB0aWxlLmNsYXNzTGlzdC5hZGQoJ3RpbGUnKVxuICAgICAgdGlsZS5pZCA9IGAke2l9LSR7an1gXG4gICAgICB0aWxlLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xuICAgICAgYm9hcmQuYXBwZW5kQ2hpbGQodGlsZSlcbiAgICB9XG4gIH1cbn0pXG5cbmV4cG9ydCBjb25zdCBwbGF5ZXJCb2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5ZXItYm9hcmQnKTtcbmV4cG9ydCBjb25zdCBlbmVteUJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbXB1dGVyLWJvYXJkJyk7XG5leHBvcnQgY29uc3QgZW5lbXlUaWxlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNjb21wdXRlci1ib2FyZCA+IC50aWxlJyk7XG5leHBvcnQgY29uc3QgcGxheWVyVGlsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjcGxheWVyLWJvYXJkID4gLnRpbGUnKTtcbmV4cG9ydCBjb25zdCB0dXJuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3R1cm4taW5kaWNhdG9yJyk7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXIge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBlbmVteUJvYXJkLCBwbGF5ZXJCb2FyZCwgbW92ZXMgPSBbXSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5lbmVteUJvYXJkID0gZW5lbXlCb2FyZDtcbiAgICB0aGlzLnBsYXllckJvYXJkID0gcGxheWVyQm9hcmQ7XG4gICAgdGhpcy5tb3ZlcyA9IG1vdmVzO1xuICAgIHRoaXMudGFyZ2V0U2hpcCA9IG51bGw7XG4gICAgdGhpcy50YXJnZXRUaWxlID0gbnVsbDtcbiAgfVxuXG4gIHNldEJvYXJkKHBpZWNlcykge1xuICAgIHBpZWNlcy5mb3JFYWNoKHBpZWNlID0+IHtcbiAgICAgIGNvbnN0IFtjb29yZCwgc2hpcF0gPSBwaWVjZTtcbiAgICAgIHRoaXMucGxheWVyQm9hcmQucGxhY2VTaGlwKGNvb3JkLCBzaGlwKTtcbiAgICB9KTtcbiAgfVxuXG4gIGF0dGFja0VuZW15KGNvb3JkKSB7XG4gICAgcmV0dXJuIHRoaXMuZW5lbXlCb2FyZC5yZWNlaXZlQXR0YWNrKGNvb3JkKVxuICB9XG5cbiAgY2hvb3NlQXR0YWNrKCkge1xuICAgIGNvbnN0IGNvb3JkID0gW3BhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAxMCwgMTApLCBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTAsIDEwKV1cbiAgICBjb25zdCBkb25lID0gdGhpcy5tb3Zlcy5maW5kKChtb3ZlKSA9PiBtb3ZlWzBdID09PSBjb29yZFswXSAmJiBtb3ZlWzFdID09PSBjb29yZFsxXSk7XG4gICAgaWYoIWRvbmUpIHtcbiAgICAgIHRoaXMudGFyZ2V0VGlsZSA9IGNvb3JkO1xuICAgICAgdGhpcy5tb3Zlcy5wdXNoKGNvb3JkKVxuICAgICAgcmV0dXJuIHRoaXMuYXR0YWNrRW5lbXkoY29vcmQpO1xuICAgIH0gXG4gICAgcmV0dXJuIHRoaXMuY2hvb3NlQXR0YWNrKCk7XG4gIH1cbn0iLCJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVib2FyZCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5ib2FyZCA9IFtdO1xuICAgIHRoaXMubWlzc2VkID0gW107XG4gICAgdGhpcy5zaGlwUGFydHMgPSAwO1xuICAgIHRoaXMuaW5pdCgpXG4gIH1cbiAgXG4gIGluaXQoKSB7XG4gICAgZm9yIChsZXQgaT0wOyBpIDwgMTA7IGkrPTEpIHtcbiAgICAgIHRoaXMuYm9hcmRbaV0gPSBbXVxuICAgICAgZm9yIChsZXQgaj0wOyBqIDwgMTA7IGorPTEpIHtcbiAgICAgICAgdGhpcy5ib2FyZFtpXS5wdXNoKG51bGwpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcGxhY2VTaGlwKGNvb3JkLCBzaGlwKSB7XG4gICAgY29uc3Qge2xlbmd0aH0gPSBzaGlwO1xuICAgIGNvbnN0IFt4LCB5XSA9IGNvb3JkO1xuXG4gICAgaWYgKHkgKyBsZW5ndGggLSAxID4gOSkgcmV0dXJuO1xuXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB0aGlzLmJvYXJkW3hdW3kraV0gPSBzaGlwO1xuICAgICAgdGhpcy5zaGlwUGFydHMgKz0gMTtcbiAgICB9XG4gIH1cblxuICByZWNlaXZlQXR0YWNrKGNvb3JkKSB7XG4gICAgY29uc3QgW3gsIHldID0gY29vcmQ7XG4gICAgY29uc3Qgc2hpcCA9IHRoaXMuYm9hcmRbeF1beV1cbiAgICBpZihzaGlwKSB7XG4gICAgICBzaGlwLmhpdCgpXG4gICAgICB0aGlzLnNoaXBQYXJ0cyAtPSAxO1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgdGhpcy5taXNzZWQucHVzaChjb29yZClcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHNoaXBzSGF2ZVN1bmsoKSB7XG4gICAgaWYgKHRoaXMuc2hpcFBhcnRzID09PSAwKSByZXR1cm4gdHJ1ZTtcbiAgfVxuXG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTaGlwIHtcbiAgY29uc3RydWN0b3IobGVuZ3RoKSB7XG4gICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gICAgdGhpcy5oaXRzID0gMDtcbiAgfVxuXG4gIGhpdCgpIHtcbiAgICB0aGlzLmhpdHMgKz0gMTtcbiAgfVxuXG4gIGlzU3VuaygpIHtcbiAgICByZXR1cm4gKHRoaXMubGVuZ3RoID09PSB0aGlzLmhpdHMpIFxuICB9XG5cbn0iLCJpbXBvcnQgUGxheWVyIGZyb20gXCIuL3BsYXllclwiO1xuaW1wb3J0IEdhbWVib2FyZCBmcm9tIFwiLi9nYW1lYm9hcmRcIjtcbmltcG9ydCBTaGlwIGZyb20gXCIuL3NoaXBcIjtcbi8vIGltcG9ydCBCb2FyZFJlbmRlcmVyIGZyb20gXCIuL3ZpZXdcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5wbGF5ZXJCb2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbiAgICB0aGlzLmVuZW15Qm9hcmQgPSBuZXcgR2FtZWJvYXJkKCk7XG4gICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKCdwbGF5ZXInLCB0aGlzLmVuZW15Qm9hcmQsIHRoaXMucGxheWVyQm9hcmQpO1xuICAgIHRoaXMuY29tcHV0ZXIgPSBuZXcgUGxheWVyKCdjb21wJywgdGhpcy5wbGF5ZXJCb2FyZCwgdGhpcy5lbmVteUJvYXJkKTtcbiAgICB0aGlzLmV2ZW50TGlzdGVuZXJzID0ge307XG4gICAgdGhpcy5jdXJyZW50UGxheWVyID0gdGhpcy5wbGF5ZXI7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMucGxheWVyLnNldEJvYXJkKFtbWzYsIDVdLCBuZXcgU2hpcCgzKV1dKVxuICAgIHRoaXMuY29tcHV0ZXIuc2V0Qm9hcmQoW1tbNiwgNV0sIG5ldyBTaGlwKDMpXV0pXG4gICAgdGhpcy5vbigndHVybkVuZCcsIChjdXJyZW50UGxheWVyKSA9PiB7XG4gICAgICBpZiAoY3VycmVudFBsYXllci5uYW1lID09PSAnY29tcCcpIHtcbiAgICAgICAgdGhpcy5jb21wdXRlckF0dGFja3MoKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBwbGF5ZXJBdHRhY2tzKGNvb3JkLCBpZCkge1xuICAgIGNvbnN0IGhpdCA9IHRoaXMucGxheWVyLmF0dGFja0VuZW15KGNvb3JkKTtcbiAgICBpZiAoaGl0KSB0aGlzLmVtaXQoJ2hpdCcsIGlkKTtcbiAgICBlbHNlIHRoaXMuZW1pdCgnbWlzcycsIGlkKTtcbiAgICB0aGlzLmVtaXQoJ3R1cm5FbmQnLCB0aGlzLmNvbXB1dGVyKVxuICB9XG5cbiAgY29tcHV0ZXJBdHRhY2tzKCkge1xuICAgIGNvbnN0IGhpdCA9IHRoaXMuY29tcHV0ZXIuY2hvb3NlQXR0YWNrKCk7XG4gICAgY29uc3QgaWQgPSB0aGlzLmNvbXB1dGVyLnRhcmdldFRpbGVbMF0gKiAxMCArIHRoaXMuY29tcHV0ZXIudGFyZ2V0VGlsZVsxXTtcbiAgICBpZiAoaGl0KSB0aGlzLmVtaXQoJ2hpdCcsIGlkKTtcbiAgICBlbHNlIHRoaXMuZW1pdCgnbWlzcycsIGlkKTtcbiAgICB0aGlzLmVtaXQoJ3R1cm5FbmQnLCB0aGlzLnBsYXllcilcbiAgfVxuXG5cblxuXG5cblxuICAvLyBwdWItc3ViXG5cbiAgLy8gU3Vic2NyaWJlIHRvIGFuIGV2ZW50XG4gIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIGlmICghdGhpcy5ldmVudExpc3RlbmVyc1tldmVudF0pIHtcbiAgICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnNbZXZlbnRdID0gW107XG4gICAgfVxuICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnNbZXZlbnRdLnB1c2gobGlzdGVuZXIpO1xuICB9XG5cbiAgLy8gVW5zdWJzY3JpYmUgZnJvbSBhbiBldmVudFxuICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgaWYgKHRoaXMuZXZlbnRMaXN0ZW5lcnNbZXZlbnRdKSB7XG4gICAgICB0aGlzLmV2ZW50TGlzdGVuZXJzW2V2ZW50XSA9IHRoaXMuZXZlbnRMaXN0ZW5lcnNbZXZlbnRdLmZpbHRlcihcbiAgICAgICAgKGV4aXN0aW5nTGlzdGVuZXIpID0+IGV4aXN0aW5nTGlzdGVuZXIgIT09IGxpc3RlbmVyXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vIEVtaXQgbGlzdGVuZXJzIG9mIHRoZSBldmVudFxuICBlbWl0KGV2ZW50LCBkYXRhKSB7XG4gICAgaWYgKHRoaXMuZXZlbnRMaXN0ZW5lcnNbZXZlbnRdKSB7XG4gICAgICB0aGlzLmV2ZW50TGlzdGVuZXJzW2V2ZW50XS5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICBsaXN0ZW5lcihkYXRhKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59IiwiaW1wb3J0ICogYXMgZG9tIGZyb20gJy4vZG9tJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm9hcmRSZW5kZXJlciB7XG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xuICAgIHRoaXMuZW5lbXlCb2FyZCA9IGRvbS5lbmVteUJvYXJkO1xuICAgIHRoaXMucGxheWVyQm9hcmQgPSBkb20ucGxheWVyQm9hcmQ7XG4gICAgdGhpcy50aWxlcyA9IGRvbS5lbmVteVRpbGVzO1xuICAgIHRoaXMudHVyblVJID0gZG9tLnR1cm47XG4gIH1cblxuICBpbml0KCkge1xuICAgIGxldCB0aWxlTm8gPSAwO1xuICAgIHRoaXMudGlsZXMuZm9yRWFjaCgodGlsZSkgPT4ge1xuICAgICAgY29uc3QgaWQgPSB0aWxlTm87XG4gICAgICB0aWxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBjb29yZCA9IFtcbiAgICAgICAgICBwYXJzZUludCh0aWxlLmlkLmNoYXJBdCgwKSwgMTApLCBcbiAgICAgICAgICBwYXJzZUludCh0aWxlLmlkLmNoYXJBdCgyKSwgMTApXG4gICAgICAgIF07XG4gICAgICAgIHRoaXMuZ2FtZS5wbGF5ZXJBdHRhY2tzKGNvb3JkLCBpZCk7XG4gICAgICAgIHRpbGUuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcbiAgICAgIH0pO1xuICAgICAgdGlsZU5vICs9IDE7XG4gICAgfSk7XG4gICAgdGhpcy5nYW1lLm9uKCd0dXJuRW5kJywgKGN1cnJlbnRQbGF5ZXIpID0+IHtcbiAgICAgIHRoaXMudXBkYXRlVHVyblVJKGN1cnJlbnRQbGF5ZXIpO1xuICAgICAgdGhpcy50b2dnbGVUaWxlcyhjdXJyZW50UGxheWVyKTtcbiAgICB9KVxuICAgIHRoaXMuZ2FtZS5vbignaGl0JywgKGlkKSA9PiB7XG4gICAgICB0aGlzLnJlbmRlckhpdChpZCk7XG4gICAgICB0aGlzLnRpbGVzID0gKHRoaXMudGlsZXMgPT09IGRvbS5lbmVteVRpbGVzKSA/IGRvbS5wbGF5ZXJUaWxlcyA6IGRvbS5lbmVteVRpbGVzIFxuICAgIH0pO1xuICAgIHRoaXMuZ2FtZS5vbignbWlzcycsIChpZCkgPT4ge1xuICAgICAgdGhpcy5yZW5kZXJNaXNzKGlkKVxuICAgICAgdGhpcy50aWxlcyA9ICh0aGlzLnRpbGVzID09PSBkb20uZW5lbXlUaWxlcykgPyBkb20ucGxheWVyVGlsZXMgOiBkb20uZW5lbXlUaWxlcyBcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlckhpdChpZCkge1xuICAgIHRoaXMudGlsZXNbaWRdLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZWQnO1xuICB9XG5cbiAgcmVuZGVyTWlzcyhpZCkge1xuICAgIHRoaXMudGlsZXNbaWRdLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdncmF5JztcbiAgfVxuXG4gIHRvZ2dsZVRpbGVzKGN1cnJlbnRQbGF5ZXIpIHtcbiAgICBpZihjdXJyZW50UGxheWVyLm5hbWUgPT09ICdjb21wJykge1xuICAgICAgdGhpcy5lbmVteUJvYXJkLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnYXV0byc7XG4gICAgICB0aGlzLnBsYXllckJvYXJkLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZW5lbXlCb2FyZC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xuICAgICAgdGhpcy5wbGF5ZXJCb2FyZC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ2F1dG8nO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZVR1cm5VSShjdXJyZW50UGxheWVyKSB7XG4gICAgaWYoY3VycmVudFBsYXllci5uYW1lID09PSAnY29tcCcpIHtcbiAgICAgIHRoaXMudHVyblVJLnRleHRDb250ZW50ID0gXCJQbGF5ZXIncyBUdXJuXCJcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50dXJuVUkudGV4dENvbnRlbnQgPSBcIkNvbXB1dGVyJ3MgVHVyblwiXG4gICAgfVxuICB9XG59IiwiaW1wb3J0ICcuL2RvbSc7XG5pbXBvcnQgJy4uL2Fzc2V0cy9zdHlsZS9zdHlsZS5jc3MnO1xuaW1wb3J0IEdhbWVNYW5hZ2VyIGZyb20gJy4vZ2FtZU1hbmFnZXInO1xuXG5jb25zdCBnYW1lID0gbmV3IEdhbWVNYW5hZ2VyKCk7XG5nYW1lLmluaXQoKTsiLCJpbXBvcnQgR2FtZSBmcm9tIFwiLi9nYW1lTG9naWNcIjtcbmltcG9ydCBET01NYW5hZ2VyIGZyb20gXCIuL2RvbU1hbmFnZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmdhbWUgPSBuZXcgR2FtZSgpO1xuICAgIHRoaXMuZG9tTWFuYWdlciA9IG5ldyBET01NYW5hZ2VyKHRoaXMuZ2FtZSk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuZ2FtZS5pbml0KCk7XG4gICAgdGhpcy5kb21NYW5hZ2VyLmluaXQoKTtcbiAgfVxufSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImIiLCJib2FyZCIsImRpc3BsYXkiLCJib3JkZXIiLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwiZ3JpZFRlbXBsYXRlUm93cyIsImoiLCJ0aWxlIiwiY2xhc3NMaXN0IiwiYWRkIiwicGxheWVyQm9hcmQiLCJnZXRFbGVtZW50QnlJZCIsImVuZW15Qm9hcmQiLCJlbmVteVRpbGVzIiwicGxheWVyVGlsZXMiLCJ0dXJuIiwibG9jYWxzIiwiUGxheWVyIiwibmFtZSIsIm1vdmVzIiwiYXJndW1lbnRzIiwiX2NsYXNzQ2FsbENoZWNrIiwidGFyZ2V0U2hpcCIsInRhcmdldFRpbGUiLCJ2YWx1ZSIsInBpZWNlcyIsIl90aGlzIiwicGllY2UiLCJfcGllY2UiLCJjb29yZCIsInNoaXAiLCJwbGFjZVNoaXAiLCJyZWNlaXZlQXR0YWNrIiwicGFyc2VJbnQiLCJNYXRoIiwicmFuZG9tIiwiZmluZCIsIm1vdmUiLCJjaG9vc2VBdHRhY2siLCJhdHRhY2tFbmVteSIsIkdhbWVib2FyZCIsIm1pc3NlZCIsInNoaXBQYXJ0cyIsImluaXQiLCJfY29vcmQiLCJfc2xpY2VkVG9BcnJheSIsIngiLCJ5IiwiX2Nvb3JkMiIsImhpdCIsIlNoaXAiLCJoaXRzIiwiR2FtZSIsInBsYXllciIsImNvbXB1dGVyIiwiZXZlbnRMaXN0ZW5lcnMiLCJjdXJyZW50UGxheWVyIiwic2V0Qm9hcmQiLCJvbiIsImNvbXB1dGVyQXR0YWNrcyIsImVtaXQiLCJldmVudCIsImxpc3RlbmVyIiwiZmlsdGVyIiwiZXhpc3RpbmdMaXN0ZW5lciIsIkJvYXJkUmVuZGVyZXIiLCJnYW1lIiwiZG9tIiwidGlsZXMiLCJ0dXJuVUkiLCJ0aWxlTm8iLCJhZGRFdmVudExpc3RlbmVyIiwiY2hhckF0IiwicGxheWVyQXR0YWNrcyIsInBvaW50ZXJFdmVudHMiLCJ1cGRhdGVUdXJuVUkiLCJ0b2dnbGVUaWxlcyIsInJlbmRlckhpdCIsInJlbmRlck1pc3MiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0ZXh0Q29udGVudCIsIkdhbWVNYW5hZ2VyIiwiZG9tTWFuYWdlciIsIkRPTU1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9
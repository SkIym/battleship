(()=>{"use strict";var t={591:(t,e,r)=>{r.d(e,{Z:()=>s});var n=r(537),i=r.n(n),o=r(645),a=r.n(o)()(i());a.push([t.id,"*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}","",{version:3,sources:["webpack://./src/assets/style/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,oCAAoC;EACpC,eAAe;AACjB",sourcesContent:["*, ::before, ::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\n#computer-board > .tile:hover {\n  background-color: rgb(207, 213, 218);\n  cursor: pointer;\n}"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var u=this[s][0];null!=u&&(a[u]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);n&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var o={},a=[],s=0;s<t.length;s++){var u=t[s],l=n.base?u[0]+n.base:u[0],c=o[l]||0,f="".concat(l," ").concat(c);o[l]=c+1;var y=r(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==y)e[y].references++,e[y].updater(p);else{var h=i(p,n);n.byIndex=s,e.splice(s,0,{identifier:f,updater:h,references:1})}a.push(f)}return a}function i(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,i){var o=n(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<o.length;a++){var s=r(o[a]);e[s].references--}for(var u=n(t,i),l=0;l<o.length;l++){var c=r(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=u}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var i=void 0!==r.layer;i&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,i&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={id:n,exports:{}};return t[n](o,o.exports,r),o.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{var t=document.querySelectorAll(".board"),e=document.getElementById("player-board");t.forEach((function(t){var e=t;e.style.display="grid",e.style.position="relative",e.style.border="1px solid black",e.style.gridTemplateColumns="repeat(10, 40px)",e.style.gridTemplateRows="repeat(10, 40px)";for(var r=0;r<10;r+=1)for(var n=0;n<10;n+=1){var i=document.createElement("div");i.classList.add("tile"),i.id="".concat(r,"-").concat(n),i.style.border="1px solid black",e.appendChild(i)}}));var n=document.getElementById("computer-board"),i=document.querySelectorAll("#computer-board > .tile"),o=document.querySelectorAll("#player-board > .tile"),a=document.getElementById("turn-indicator"),s=document.getElementById("play-again"),u=r(379),l=r.n(u),c=r(795),f=r.n(c),y=r(569),p=r.n(y),h=r(565),v=r.n(h),m=r(216),d=r.n(m),b=r(589),g=r.n(b),S=r(591),k={};function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function E(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==A(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===A(i)?i:String(i)),n)}var i}k.styleTagTransform=g(),k.setAttributes=v(),k.insert=p().bind(null,"head"),k.domAPI=f(),k.insertStyleElement=d(),l()(S.Z,k),S.Z&&S.Z.locals&&S.Z.locals;var P=function(){function t(e,r,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.enemyBoard=r,this.playerBoard=n,this.moves=i,this.targetShip=null,this.targetTile=null}var e,r;return e=t,(r=[{key:"reset",value:function(){this.moves=[],this.targetShip=null,this.targetTile=null}},{key:"setBoard",value:function(t){var e=this;t.forEach((function(t){var r,n,i=(n=2,function(t){if(Array.isArray(t))return t}(r=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o,a,s=[],u=!0,l=!1;try{if(o=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=o.call(r)).done)&&(s.push(n.value),s.length!==e);u=!0);}catch(t){l=!0,i=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw i}}return s}}(r,n)||function(t,e){if(t){if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?w(t,e):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[0],a=i[1];e.playerBoard.placeShip(o,a)}))}},{key:"attackEnemy",value:function(t){return this.enemyBoard.receiveAttack(t)}},{key:"chooseAttack",value:function(){var t=[parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)];return this.moves.find((function(e){return e[0]===t[0]&&e[1]===t[1]}))?this.chooseAttack():(this.targetTile=t,this.moves.push(t),this.attackEnemy(t))}}])&&E(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function j(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o,a,s=[],u=!0,l=!1;try{if(o=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=o.call(r)).done)&&(s.push(n.value),s.length!==e);u=!0);}catch(t){l=!0,i=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return C(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?C(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function B(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==T(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===T(i)?i:String(i)),n)}var i}var I=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[],this.missed=[],this.shipParts=0,this.init()}var e,r;return e=t,r=[{key:"init",value:function(){for(var t=0;t<10;t+=1){this.board[t]=[];for(var e=0;e<10;e+=1)this.board[t].push(null)}}},{key:"reset",value:function(){this.board=[],this.missed=[],this.shipParts=0,this.init()}},{key:"placeShip",value:function(t,e){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=e.length,i=j(t,2),o=i[0],a=i[1];if(r&&(a+n-1>9||this.isInvalidHoriPlacement(o,a,n)))return!1;if(!r&&(o+n-1>9||this.isInvalidVertiPlacement(o,a,n)))return!1;for(var s=0;s<n;s+=1)r?this.board[o][a+s]=e:this.board[o+s][a]=e,this.shipParts+=1;return!0}},{key:"isInvalidHoriPlacement",value:function(t,e,r){for(var n=t-1;n<=t+1;n+=1)for(var i=e-1;i<=e+r;i+=1)if(n>=0&&n<=9&&i>=0&&i<=9&&this.board[n][i])return!0;return!1}},{key:"isInvalidVertiPlacement",value:function(t,e,r){for(var n=t-1;n<=t+r;n+=1)for(var i=e-1;i<=e+1;i+=1)if(n>=0&&n<=9&&i>=0&&i<=9&&this.board[n][i])return!0;return!1}},{key:"receiveAttack",value:function(t){var e=j(t,2),r=e[0],n=e[1],i=this.board[r][n];return i?(i.hit(),this.shipParts-=1,!0):(this.missed.push(t),!1)}},{key:"shipsHaveSunk",value:function(){if(0===this.shipParts)return!0}}],r&&B(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function L(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===x(i)?i:String(i)),n)}var i}var O=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.hits=0}var e,r;return e=t,(r=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length===this.hits}}])&&L(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function U(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==M(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===M(i)?i:String(i)),n)}var i}var H=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.playerBoard=new I,this.enemyBoard=new I,this.player=new P("player",this.enemyBoard,this.playerBoard),this.computer=new P("comp",this.playerBoard,this.enemyBoard),this.eventListeners={},this.currentPlayer=this.player,this.shipLengths=[4,3,3,2,2,2,1,1,1,1]}var e,r;return e=t,(r=[{key:"init",value:function(){var t=this;this.playerBoard.reset(),this.enemyBoard.reset(),this.player.reset(),this.computer.reset(),this.currentPlayer=this.player,this.eventListeners={},this.placeShips(this.playerBoard),this.placeShips(this.enemyBoard),this.on("turnEnd",(function(e){"comp"===e.name&&setTimeout((function(){return t.computerAttacks()}),400)}))}},{key:"playerAttacks",value:function(t,e){var r=this.player.attackEnemy(t);this.registerAttack(r,e)||(this.currentPlayer=this.computer,this.signalTurnEnd())}},{key:"computerAttacks",value:function(){var t=this.computer.chooseAttack(),e=10*this.computer.targetTile[0]+this.computer.targetTile[1];this.registerAttack(t,e)||(this.currentPlayer=this.player,this.signalTurnEnd())}},{key:"registerAttack",value:function(t,e){return t?this.emit("hit",e):this.emit("miss",e),this.isGameOver()}},{key:"signalTurnEnd",value:function(){this.emit("turnEnd",this.currentPlayer)}},{key:"isGameOver",value:function(){if(this.playerBoard.shipsHaveSunk()||this.enemyBoard.shipsHaveSunk())return this.emit("over",this.currentPlayer.name),!0}},{key:"placeShips",value:function(t){var e=this;this.shipLengths.forEach((function(r){var n=Math.random()>.5;e.placeShipsHelper(r,n,t)}))}},{key:"placeShipsHelper",value:function(t,e,r){return!!r.placeShip([parseInt(10*Math.random(),10),parseInt(10*Math.random(),10)],new O(t),e)||this.placeShipsHelper(t,e,r)}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&U(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===R(i)?i:String(i)),n)}var i}var Z=function(){function t(r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=r,this.enemyBoard=n,this.playerBoard=e,this.tiles=i,this.turnUI=a,this.eventListeners={},this.setUpTiles()}var r,u;return r=t,(u=[{key:"init",value:function(t){this.tiles=i,this.eventListeners={},this.resetBoard(),this.game=t,this.subscribe()}},{key:"setUpTiles",value:function(){var t=this,e=0;this.tiles.forEach((function(r){var n=e;r.addEventListener("click",(function(e){var i=[parseInt(r.id.charAt(0),10),parseInt(r.id.charAt(2),10)];t.game.playerAttacks(i,n),e.target.style.pointerEvents="none"})),e+=1})),s.textContent="Start"}},{key:"subscribe",value:function(){var t=this;this.game.on("hit",(function(e){t.renderHit(e),t.toggleTiles()})),this.game.on("miss",(function(e){t.renderMiss(e),t.toggleTiles()})),this.game.on("turnEnd",(function(e){t.updateTurnUI(e),t.togglePlay(e)})),this.game.on("over",(function(e){t.disableBoard(e)})),s.addEventListener("click",(function(){s.style.display="none",t.emit("reset")}))}},{key:"renderHit",value:function(t){this.tiles[t].style.backgroundColor="red"}},{key:"renderMiss",value:function(t){this.tiles[t].style.backgroundColor="gray"}},{key:"toggleTiles",value:function(){this.tiles=this.tiles===i?o:i}},{key:"togglePlay",value:function(t){"player"===t.name?(this.enemyBoard.style.pointerEvents="auto",this.playerBoard.style.pointerEvents="none"):(this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="auto")}},{key:"updateTurnUI",value:function(t){"player"===t.name?this.turnUI.textContent="Player's Turn":this.turnUI.textContent="Computer's Turn"}},{key:"disableBoard",value:function(t){this.turnUI.textContent="".concat(t," wins!"),s.style.display="block",s.textContent="Play Again",this.freezeBoards()}},{key:"freezeBoards",value:function(){this.enemyBoard.style.pointerEvents="none",this.playerBoard.style.pointerEvents="none"}},{key:"resetBoard",value:function(){[i,o].forEach((function(t){t.forEach((function(t){t.style.backgroundColor="",t.style.removeProperty("pointer-events")}))})),this.turnUI.textContent="BATTLESHIP",this.togglePlay(this.game.currentPlayer)}},{key:"on",value:function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}},{key:"off",value:function(t,e){this.eventListeners[t]&&(this.eventListeners[t]=this.eventListeners[t].filter((function(t){return t!==e})))}},{key:"emit",value:function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach((function(t){t(e)}))}}])&&N(r.prototype,u),Object.defineProperty(r,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function z(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===q(i)?i:String(i)),n)}var i}(new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=new H,this.domManager=new Z(this.game)}var e,r;return e=t,(r=[{key:"init",value:function(){var t=this;this.game.init(),this.domManager.init(this.game),this.domManager.on("reset",(function(){t.init()}))}}])&&z(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}())).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,